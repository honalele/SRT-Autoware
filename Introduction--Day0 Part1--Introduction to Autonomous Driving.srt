1
00:00:02,515 --> 00:00:05,784
大家好，这里是Alexander Carballo

2
00:00:06,258 --> 00:00:11,197
一名来自日本名古屋大学的教授

3
00:00:11,204 --> 00:00:17,076
同时，我是也一家叫做TierIV的日本公司的研究员

4
00:00:17,083 --> 00:00:26,526
非常荣幸有机会向你们解说，Autoware在线培训课程

5
00:00:26,526 --> 00:00:34,066
为了准备这个在线课程，我们准备了很多有趣的资料

6
00:00:34,067 --> 00:00:38,372
这将会对您未来利用Autoware提供补充信息

7
00:00:38,372 --> 00:00:44,945
在这个需要动手实践的培训过程中，你们将会掌握关于怎样利用Autoware

8
00:00:45,412 --> 00:00:51,851
怎样建立模型（Prototyping）和怎样验证概念（PoC: Proof of Concept）

9
00:00:53,787 --> 00:01:05,131
本次的在线培训包含了6天的课程以及超过25小时的内容

10
00:01:05,131 --> 00:01:16,476
我将用英文进行对课程的讲解，而视频中也添加了中文字幕便于大家理解

11
00:01:16,476 --> 00:01:22,281
我们有逐步的操作演示视频

12
00:01:22,282 --> 00:01:29,456
你们可以一边观看我们提供的课程视频，一边在自己的环境进行实际操作

13
00:01:29,456 --> 00:01:34,094
请多次重复，直到你们掌握好每一个概念

14
00:01:34,094 --> 00:01:43,837
并且我们非常鼓励在自己的环境里重复练习我们在课程里介绍的的内容

15
00:01:43,837 --> 00:01:49,610
我们希望你们不仅能够掌握关于Autoware的知识

16
00:01:49,609 --> 00:01:55,615
还能掌握Autoware的一些背景知识

17
00:01:55,615 --> 00:02:00,019
还有关于自动驾驶车辆技术相关的知识

18
00:02:00,019 --> 00:02:04,657
我们会讲到Autoware的各个方面的相关知识循序渐进，

19
00:02:04,657 --> 00:02:10,996
还会介绍在实际的应用过程中我们的经验和具体的实战情况

20
00:02:10,997 --> 00:02:17,336
另外还会介绍怎样把代码部署到实际的车辆上

21
00:02:17,337 --> 00:02:24,411
如果你们完成了这个课程你们应该能够将Autoware部署在车辆上

22
00:02:24,410 --> 00:02:28,414
具体来说，这辆车应该被设置为自动驾驶的

23
00:02:28,414 --> 00:02:35,321
带一辆有通信装置，配有驾驶装置的电动车

24
00:02:35,321 --> 00:02:38,657
还能够与Autoware进行交互

25
00:02:38,658 --> 00:02:44,864
这里Autoware被当作一种进行验证概念（PoC: Proof of Concept）的工具

26
00:02:44,864 --> 00:02:49,468
也可以用于搭建模型（Prototyping），用来验证你们的商业想法

27
00:02:49,469 --> 00:02:54,129
也许用来最终生产自动驾驶系统还为时过早

28
00:02:54,140 --> 00:03:04,016
但是可以用来测试你们的技术,你们可以具体做一些

29
00:03:04,017 --> 00:03:11,257
比如校准传感器，或者用物体检测技术来构建3D地图，HD（高清）地图

30
00:03:11,257 --> 00:03:15,028
你们可以利用Autoware中已有的技术

31
00:03:15,895 --> 00:03:19,532
或者将其替换成你们自己的技术

32
00:03:20,166 --> 00:03:24,203
例如，深度学习手法

33
00:03:24,204 --> 00:03:28,364
你们也可以在驾驶模拟器中运行Autoware

34
00:03:28,508 --> 00:03:34,647
当然也可以在硬件中运行等等。

35
00:03:35,615 --> 00:03:38,935
本次培训将为您提供

36
00:03:38,952 --> 00:03:44,558
用于帮助你们自己去搭建Autoware系统所需的工具

37
00:03:45,692 --> 00:03:53,766
正如我之前提到的，这个课程的结构包含6天的课程

38
00:03:53,766 --> 00:03:56,436
第一天，也即是Day0

39
00:03:56,435 --> 00:04:01,407
是系统的概述，我们当然会介绍什么是Autoware

40
00:04:01,407 --> 00:04:05,477
Autoware可以用来做什么

41
00:04:05,478 --> 00:04:10,884
另外，我们会介绍一些重要的相关技术

42
00:04:12,785 --> 00:04:16,825
在Day1, 我们开始介绍具体的Autoware

43
00:04:16,822 --> 00:04:20,026
然后，我们会介绍怎样安装Autoware具体的操作方法

44
00:04:20,026 --> 00:04:28,801
我们还会介绍ROS以及如何配置ROS和安装Autoware

45
00:04:31,070 --> 00:04:40,213
并且，在Day1的第二个部分我们会启动Autoware，具体的做一些基本操作

46
00:04:43,483 --> 00:04:47,954
正如我之前提到发的， 我们会逐步的向你们演示（操作方法）

47
00:04:48,288 --> 00:04:51,358
所以，请试着跟我们重复这些操作

48
00:04:51,457 --> 00:05:01,057
因为这是一个在线能够动手操作（hands on）的课程

49
00:05:01,860 --> 00:05:06,598
讲课的我，和你们之间，互动会很少

50
00:05:06,673 --> 00:05:13,079
所以，我们非常鼓励你们可以反复阅读,并重复操作

51
00:05:15,715 --> 00:05:19,005
如果你们不试图动手操作，只是去听课程的话

52
00:05:19,018 --> 00:05:25,658
想要去真正的掌握这里的技能就会变得比较难

53
00:05:27,293 --> 00:05:36,235
所以建议你们，在本次培训的过程中，同时也多加练习课程中演示的具体操作

54
00:05:36,235 --> 00:05:41,407
在Day2 的课里，我们会介绍一些关于SLAM，3D地图的问题

55
00:05:41,407 --> 00:05:45,078
自我定位（Localization）以及如何构建高清地图（HD Maps）

56
00:05:47,080 --> 00:05:50,884
以及这些技术的重用性，类型等

57
00:05:50,883 --> 00:05:53,953
我们还会介绍如何生成搜索地图

58
00:05:56,055 --> 00:06:00,359
在Day3的课里，我们会聚焦于物体识别和物体追踪问题

59
00:06:00,793 --> 00:06:04,997
我们会介绍每一项技术的基础知识

60
00:06:04,997 --> 00:06:10,268
例如物体识别，物体追踪的不同手法

61
00:06:10,269 --> 00:06:14,973
我们会讲到在Autoware里有哪些具体的方法

62
00:06:14,941 --> 00:06:18,578
基于camera或lidar的，以及融合（Fusion）的技术

63
00:06:18,945 --> 00:06:22,048
还比如关于物体追踪，我们会介绍不同的追踪方法

64
00:06:22,048 --> 00:06:25,985
甚至会讲到识别信号灯的方法

65
00:06:25,985 --> 00:06:31,124
在Day4，我们会介绍路径生成，具体来说，

66
00:06:31,124 --> 00:06:35,862
就是怎样生成一条车辆可以从头到尾移动行驶的路径

67
00:06:36,129 --> 00:06:40,233
从开始一直到目标地

68
00:06:40,233 --> 00:06:44,871
在最后一天（Day5），我们将会讨论决策的主题

69
00:06:44,871 --> 00:06:49,709
还有，驾驶模拟器和Autoware的未来发展

70
00:06:51,144 --> 00:06:59,319
我希望本次课程中不仅有有趣的内容

71
00:06:59,318 --> 00:07:07,092
能让大家通过动手去练习操作演示

72
00:07:07,460 --> 00:07:12,399
最后让你们可以自己动手完成自己的项目

73
00:07:12,732 --> 00:07:19,906
正如我之前提到的， 如果这与动手实践相结合

74
00:07:19,906 --> 00:07:24,511
你们对技术的理解会更扎实

75
00:07:24,510 --> 00:07:27,800
为了能够达到部署这项技术的目的

76
00:07:27,814 --> 00:07:33,352
以及在你们的未来，能够更好的为你们的公司服务

77
00:07:35,188 --> 00:07:40,794
让我们开始吧，本次讲座的第一部分内容

78
00:07:41,227 --> 00:07:45,465
自动驾驶车辆的简介

79
00:07:50,670 --> 00:07:55,208
今天的内容包括自动驾驶的等级区别

80
00:07:55,908 --> 00:07:58,744
自动驾驶对社会的影响

81
00:07:59,245 --> 00:08:03,550
市场的趋势，以及开源自动驾驶技术的讨论

82
00:08:03,549 --> 00:08:06,686
还会介绍关于自动驾驶的安全保障

83
00:08:06,686 --> 00:08:11,658
我们一直在做什么（来保障自动驾驶的安全）

84
00:08:12,525 --> 00:08:16,462
和驾驶中的一些实际考虑

85
00:08:17,563 --> 00:08:23,335
这些年，我们的社会已经逐渐发展为大家都会驾车出行的状态

86
00:08:23,436 --> 00:08:29,375
这里就会让我们联想到一个近几年的关键字 CASE

87
00:08:29,375 --> 00:08:31,365
CASE里的C来自Connected(连接)

88
00:08:31,377 --> 00:08:35,581
Automated(自动化), Sharing&Service(共享和服务), Electric Drive(电动)

89
00:08:36,182 --> 00:08:43,789
这是目前被认为，社会需要的关键组成部分

90
00:08:44,957 --> 00:08:48,627
对于什么是超级社会所需的关键组成部分

91
00:08:48,628 --> 00:08:51,297
首先，一切都是相连的（Connected）

92
00:08:51,297 --> 00:08:55,001
现在无论人们移动哪里，都会随身带着智能手机。

93
00:08:55,001 --> 00:08:58,872
通过取得你所在位置的信息，你就可以开发一些基于地理位置的服务

94
00:08:58,871 --> 00:09:04,977
用你可以去自动售货机，你的智能手机，只是扫描一些二维码

95
00:09:05,111 --> 00:09:15,121
或者通过一些应用软件，你就可以购买饮料，或者食物等等

96
00:09:15,121 --> 00:09:20,559
可以随时随地获取信息，就在你当前所处的位置

97
00:09:20,560 --> 00:09:29,502
你就可以获取天气预报预测，或者下一辆巴士或者电车到达的情况

98
00:09:29,502 --> 00:09:35,841
如果您始终处于连接的状态，那么在移动的汽车里也处于连接的状态

99
00:09:36,409 --> 00:09:41,648
自动化（Automated），这个想法来源于简化体力劳动

100
00:09:43,115 --> 00:09:53,559
某些等级的自动化，例如，为了让您快速解决一些需求

101
00:09:55,995 --> 00:10:02,501
在无需人为干涉的情况下就可以达到目的

102
00:10:02,501 --> 00:10:08,941
所以你家的电器也是一种自动化服务

103
00:10:08,941 --> 00:10:12,678
还比如，车辆是作为一种出行服务

104
00:10:13,145 --> 00:10:20,752
基本上，拥有这项技术可能成本会很高

105
00:10:20,753 --> 00:10:27,927
所以，人们想出了共享（Sharing）的方法，比如你想骑着一辆自行车去工作

106
00:10:29,710 --> 00:10:33,150
可是这里有一个问题就是，你必须随身携带自行车

107
00:10:33,150 --> 00:10:37,587
比如你从家里出发，骑车到了车站，你得把自行车带到电车上

108
00:10:37,616 --> 00:10:41,086
然后当你下电车的时候你还得将自行车带下车

109
00:10:41,774 --> 00:10:46,612
然后骑行一段时间之后，你可能还需要再去搭乘其他的交通工具

110
00:10:46,612 --> 00:10:52,492
所以，通过共享单车的方法，你就可以简化这个过程

111
00:10:52,471 --> 00:10:57,643
你从自己的家里出发时，骑一辆单车

112
00:10:57,657 --> 00:11:06,832
到第一站，然后去乘坐电车，下了电车，你再去找一辆共享单车

113
00:11:06,832 --> 00:11:12,882
一直到你的需要下次乘坐其他交通工具的地方

114
00:11:13,339 --> 00:11:18,077
找出最近的共享单车，只需使用它，然后去下一站

115
00:11:18,077 --> 00:11:22,097
这并不新鲜，这些年我们已经可以常常看到这种应用

116
00:11:22,682 --> 00:11:27,218
社会也普遍接受这种服务认为是一种非常方便的服务

117
00:11:27,853 --> 00:11:34,363
所以，对于汽车而言，我们也有同样的情况，现在很难拥有一辆自动驾驶汽车

118
00:11:35,161 --> 00:11:42,902
因为它们并不便宜甚至是相当昂贵的

119
00:11:42,902 --> 00:11:49,842
因为还包括传感器，处理器，通信设备等等

120
00:11:49,842 --> 00:11:59,452
所以说，个人想要拥有一辆自动驾驶的车辆，仍然并不现实

121
00:11:59,438 --> 00:12:09,047
但是共享汽车却可以帮助我们利用移动服务

122
00:12:09,055 --> 00:12:18,197
最后，我们希望能够早实现的社会目的，还有减少废气排放和尽量减少生态指纹

123
00:12:18,220 --> 00:12:27,729
通过拥有这样的自动化设备，在我们周围的车辆中，我们可以尽快达到这一点

124
00:12:28,214 --> 00:12:33,319
有些内容我们不会在这个课程里讨论到，

125
00:12:33,319 --> 00:12:39,158
例如，目前用于自动驾驶车辆，单车，或者

126
00:12:39,158 --> 00:12:44,329
摩托车上面的电池，目前基于锂的电池产业链业务中

127
00:12:44,330 --> 00:12:51,937
有一些可能对环境不是最友好的，但我们不打算在这里讨论这个话题

128
00:12:51,937 --> 00:12:58,611
重要的是我们我们能达成这样的共识

129
00:12:58,611 --> 00:13:07,686
我们致力于一个最终能减少二氧化碳排放和环境污染的领域

130
00:13:07,686 --> 00:13:12,191
这将会是我们为这个社会提出最好的方案

131
00:13:12,191 --> 00:13:15,394
这点是我们都有所共识的

132
00:13:16,128 --> 00:13:19,618
这张图不是最新的图

133
00:13:19,632 --> 00:13:29,642
图里的是2017年的一辆自动驾驶车辆，这辆车配备了大量传感器

134
00:13:29,760 --> 00:13:35,265
和一些昂贵的设置，这些装置对于车辆取得现实世界的信息，是非常重要的

135
00:13:37,516 --> 00:13:39,985
所以我们可以理解为

136
00:13:40,019 --> 00:13:45,569
自动驾驶车辆是一种像机器人的车辆

137
00:13:46,091 --> 00:13:51,263
因为它需要预测，感知和理解周围的世界

138
00:13:51,263 --> 00:13:58,537
我们理解自动驾驶需要独立完成导航

139
00:13:58,838 --> 00:14:04,810
在整个驾驶过程中都可以自动完成行驶

140
00:14:04,810 --> 00:14:09,415
所以自动驾驶车辆，和任何类型的其他车辆一样

141
00:14:09,415 --> 00:14:14,605
只是这种车辆，装备了传感器，和计算设备，变成了自动驾驶车辆

142
00:14:16,288 --> 00:14:22,394
不可否认，自动驾驶车辆看起来有些笨重

143
00:14:23,160 --> 00:14:28,965
因为需要在车上，配置多个传感器

144
00:14:30,669 --> 00:14:38,510
最近，这个图里是去年，自动驾驶车辆，进化到了极致的自动驾驶

145
00:14:38,520 --> 00:14:46,961
自动驾驶车辆，现在可以行驶每小时300公里。

146
00:14:46,952 --> 00:14:52,458
这是目前许多研究中心的现状

147
00:14:52,470 --> 00:14:57,308
当然，这是（目前）一些赛车方程式的现状

148
00:14:57,309 --> 00:15:00,813
图里是一辆一级方程式自动驾驶汽车

149
00:15:01,166 --> 00:15:06,437
耗资超过100万美元，上面配有多个传感器

150
00:15:07,039 --> 00:15:13,679
这个是去年十月，在Indy Autonomous Challenge期间的图片

151
00:15:17,260 --> 00:15:20,330
这台有类似的功能

152
00:15:20,330 --> 00:15:23,700
在导航的过程中，能够自动的接收信息

153
00:15:23,700 --> 00:15:27,940
并在能够在有限的条件下，理解周围环境

154
00:15:27,940 --> 00:15:33,780
当然这并不是普通的车辆

155
00:15:34,099 --> 00:15:38,804
现在图片中的是，此次比赛的一个团队所拥有的比赛用车

156
00:15:38,804 --> 00:15:41,440
事实上，参加这个比赛的所有的车

157
00:15:41,440 --> 00:15:47,020
比如图片中的这台我没有在图片中标记或者强调出这辆车的配置

158
00:15:47,015 --> 00:15:51,520
但你们可以看到，在这台车上，有几个传感器

159
00:15:51,520 --> 00:16:00,929
比如lidar(激光雷达)，camera(相机)，还有其他的多种配置，还有radar(雷达)

160
00:16:03,395 --> 00:16:10,669
Wi-Fi连接，还有多台地理位置GNSS的接收器

161
00:16:13,265 --> 00:16:21,339
接收器还带RTK基于基站（base station）的矫正器等等

162
00:16:24,783 --> 00:16:34,259
接下来我们会有几个视频，演示是怎样使得整个系统在无人驾驶的情况下运行

163
00:16:35,830 --> 00:16:42,637
为了让你们更方便的了解信息，我想在视频里应该导入了音频

164
00:16:44,536 --> 00:16:47,806
让我按下播放键，来看其中的第一个视频

165
00:17:01,020 --> 00:17:14,567
（视频里的声音）

166
00:17:17,869 --> 00:17:28,247
你们可以看到这里有一台车在跑，有很多车有些问题

167
00:17:28,580 --> 00:17:35,087
有很多车不能正常行驶，比如这台车会在撞到墙上

168
00:17:35,554 --> 00:17:39,658
这里又一次撞上了

169
00:17:40,092 --> 00:17:44,763
它们要输了，它们在失去继续导航的可能性

170
00:17:47,399 --> 00:17:52,404
其中只有一个团队，我想是这辆来自慕尼黑工业大学的车

171
00:17:52,771 --> 00:18:02,114
它们能够正常运行，并且最终赢得了这次挑战赛

172
00:18:06,151 --> 00:18:11,356
它们达到了所有的标准，以最快的速度我认为他们甚至达到了最高速度

173
00:18:11,356 --> 00:18:16,426
在某些位置，速度达到了每小时250公里

174
00:18:19,498 --> 00:18:24,303
许多团队都遇到了传感器的性能问题

175
00:18:25,337 --> 00:18:28,740
自我定位问题，有一些在算法当中出现了错误

176
00:18:29,076 --> 00:18:32,680
但是，他们仍然做到了

177
00:18:32,680 --> 00:18:40,020
在这么困难的任务中完成了自动驾驶，并且实现了高速的自动驾驶

178
00:18:40,352 --> 00:18:43,312
另外，在这场比赛当中还发生了一件事

179
00:18:44,123 --> 00:18:50,996
刚开始，他们想把所有的车都放在一起，就像一级方程式赛车一起比赛

180
00:18:50,996 --> 00:18:57,369
从同一点同时出发，一起比赛，然而，这样非常困难。

181
00:18:57,703 --> 00:19:01,173
没有一个团队能做到这些

182
00:19:01,507 --> 00:19:05,511
我想慕尼黑工业大学可能想要做一些示范

183
00:19:05,511 --> 00:19:12,217
不过最终，主办方决定不那样做

184
00:19:12,229 --> 00:19:15,265
这里还有许多的遗留待解决的问题

185
00:19:15,320 --> 00:19:18,624
例如，如何在有障碍物的情况下导航

186
00:19:18,624 --> 00:19:22,194
有真正的障碍物并且在高速驾驶的环境里

187
00:19:22,261 --> 00:19:29,801
为什么这很重要？因为如果你能够解决这个至关重要的难题

188
00:19:29,801 --> 00:19:34,773
如何在非常高速的情况下，持续导航

189
00:19:35,240 --> 00:19:41,780
那么应该也可以把这些技术用更加简单的方法扩展到普通车上

190
00:19:42,948 --> 00:19:49,888
最后，这个来自同一慕尼黑工业大学的实验室，你们可以看一下

191
00:19:51,290 --> 00:20:12,211
（视频里的声音）

192
00:20:13,170 --> 00:20:17,674
当然，这些家伙不完全遵循CASE的范例

193
00:20:17,683 --> 00:20:26,225
因为这些车不是电动的，为了能够非常快速的驾驶，他们需要巨大的马力

194
00:20:26,243 --> 00:20:30,080
它们不是电动车它们是汽油车

195
00:20:30,310 --> 00:20:34,580
因为这些是一级方程式式的赛车

196
00:20:35,360 --> 00:20:41,066
正在试着在没有驾驶员，没有人驾驶的情况配置了很多电脑和很多传感器

197
00:20:41,060 --> 00:20:46,131
但这仍然非常了不起，他们取得了非常显著的进步

198
00:20:47,346 --> 00:20:49,581
这就是现状

199
00:20:49,650 --> 00:20:59,593
我们看到了自动驾驶， 在极端条件下各种不同方面的尝试

200
00:20:59,758 --> 00:21:02,894
如果我们解决了这些极端条件下的问题

201
00:21:02,894 --> 00:21:08,734
那我们就可以在正常的条件下，实施这些解决方案

202
00:21:08,734 --> 00:21:13,564
应该也会更加简单，并且会带来很多积极的影响

203
00:21:15,073 --> 00:21:19,044
好的，现在我们来介绍一下自动驾驶的几个等级

204
00:21:28,453 --> 00:21:38,096
这个等级，是由美国汽车工程师学会（SAE）几年前提出的

205
00:21:39,631 --> 00:21:52,811
他们将自动化的程度进行定义和分类，分成了六个等级

206
00:21:54,446 --> 00:22:01,366
包括等级0等级0就是毫无自动化。所有事情有驾驶员来决定

207
00:22:04,289 --> 00:22:16,668
那么，等级1从大约2000年开始，系统引进了巡航控制功能

208
00:22:16,968 --> 00:22:23,608
那么什么是巡航控制呢，是速度由驾驶员控制（的系统）

209
00:22:25,243 --> 00:22:33,452
你可能会获得一些辅助功能。例如，系统可以保持某个特定的速度

210
00:22:36,610 --> 00:22:46,620
等级2，就是特斯拉所说的他们的方法，则是部分自动化

211
00:22:46,932 --> 00:22:52,404
那么部分自动化，其实基本上就是巡航控制(Adaptive Cruise Control)，

212
00:22:52,537 --> 00:22:55,173
加上车道保持(Lane keeping)系统

213
00:22:55,807 --> 00:23:03,148
在车道上根据障碍物的位置，以一定的概率来调整车辆的速度。

214
00:23:04,116 --> 00:23:11,890
等级3则是有条件的自动化，在这个等级，（系统）可以接受人为干预

215
00:23:11,890 --> 00:23:15,961
比起等级2的部分自动化，干预的手变少了

216
00:23:15,961 --> 00:23:24,703
仍然需要驾驶员，驾驶员必须在车里，但并不完全有必要一直如此

217
00:23:26,238 --> 00:23:31,376
车辆可以接管一部分的驾驶员的功能

218
00:23:32,110 --> 00:23:37,749
例如，先进的驾驶辅助系统ADAS(Advanced Driving Assistance Systems)

219
00:23:38,150 --> 00:23:43,155
有避开障碍物，有自动泊车等功能

220
00:23:44,856 --> 00:23:51,997
等级4，也就是高度自动化，也是目前大部分自动驾驶追求的目标

221
00:23:52,631 --> 00:23:57,436
很多公司声称，自家的自动驾驶都在某一种程度上达到了这个等级

222
00:23:57,836 --> 00:24:04,576
大家都在探索如何能达到这个等级

223
00:24:04,910 --> 00:24:09,748
也许当前还没有完全达到这个等级，但在某些场景里实现了这个等级

224
00:24:10,182 --> 00:24:15,821
等级4，不需要驾驶员了。实际上，甚至不需要有方向盘

225
00:24:16,354 --> 00:24:23,862
在这个等级，车辆需要能够完成所有的操作。一切都是自动化的

226
00:24:23,995 --> 00:24:30,402
但是在极端条件下

227
00:24:30,402 --> 00:24:38,109
或者在一些没有考虑到的情况下司机仍然有责任对该车辆进行认为干预

228
00:24:38,109 --> 00:24:46,785
即使车里没有方向盘，但是系统需要提供一些机制来操作系统的方向

229
00:24:46,810 --> 00:24:57,220
比如用一个操纵杆（joystick）或者司机能够踩刹车

230
00:24:57,303 --> 00:25:07,413
或者可以通过用户界面，于车辆系统进行交互并控制汽车

231
00:25:07,405 --> 00:25:17,415
重要的是在等级4，在一定的约束条件下是可以无人驾驶，这些限制条件有明确定义

232
00:25:17,410 --> 00:25:23,082
即被称为ODD，操作定义域(Operational Define Domain)

233
00:25:23,088 --> 00:25:28,860
这些车的某些特定功能是设计用于在该特定区域运行

234
00:25:28,860 --> 00:25:32,063
所以，你定义了汽车可以行驶的边界

235
00:25:32,063 --> 00:25:40,805
如果你跨越了指定的边界，该车必须依法转向手动驾驶

236
00:25:40,805 --> 00:25:46,678
因为这个功能没有通过被定义之外的条件测试

237
00:25:46,678 --> 00:25:50,982
边界条件可以是比如，具体的地图，导航所需要的地图

238
00:25:50,982 --> 00:25:58,557
如果车辆行驶预设地图之外的地区，因为导航没有足够的信息，会导致系统不正常

239
00:26:01,059 --> 00:26:11,469
用于设置功能的边界之一有地理围栏，还有天气条件

240
00:26:12,528 --> 00:26:20,470
比如，这辆车只能在晴朗的天气条件下工作， 不可以在其他天气条件写行驶

241
00:26:20,679 --> 00:26:26,384
所以如果今天有小雨，或季节来到冬天，这个功能使得车辆必须停下

242
00:26:26,380 --> 00:26:29,783
因为系统不会，也没有被配置为可以在雪天行驶。

243
00:26:29,788 --> 00:26:37,996
所以，这些等级4的车辆，包含不同的限制

244
00:26:37,996 --> 00:26:44,636
等级5，完全自动驾驶代表的是车辆已经不在需要驾驶员。

245
00:26:44,636 --> 00:26:56,348
我忘记说一件事了，在等级4，在某些情况下，法律要求车辆可以被远程控制

246
00:26:56,381 --> 00:26:59,551
尤其是共享车辆

247
00:26:59,551 --> 00:27:05,590
由专门的（远程）操作员进行检查和控制，远程操作员有权查看汽车

248
00:27:05,880 --> 00:27:09,917
如果发生一些危险情况

249
00:27:09,940 --> 00:27:16,813
那么远程控制的操作员，将需要接管车辆控制，接管驾驶并远程的控制车辆行为

250
00:27:17,636 --> 00:27:28,413
一些没有驾驶员和乘客的车辆或者运输货物的车辆，比如，一些物流用车

251
00:27:28,647 --> 00:27:35,286
在一些限制好的ODD里，还是有可能发生一些情况，需要人为进行远程干预

252
00:27:35,320 --> 00:27:39,657
这个也是等级4的一个条件

253
00:27:40,025 --> 00:27:45,630
OK, 在等级5驾驶行为不再需要任何驾驶员

254
00:27:45,620 --> 00:27:50,658
不需要远程控制完全不需要人为控制，车辆可以完全的自动驾驶

255
00:27:51,369 --> 00:28:03,214
在任何的天气，任何时间，和任何条件下

256
00:28:03,220 --> 00:28:14,664
所以你买的同一辆车，不管是在美国，或中国，或日本

257
00:28:14,659 --> 00:28:23,868
这辆车可以在印度甚至哥斯达黎加，也就是我的国家，或者其他什么地方行驶

258
00:28:24,469 --> 00:28:33,078
即使车辆没有环境的地图，车辆也有可能带你到目的地

259
00:28:33,611 --> 00:28:39,651
有一些人可能会说（在这个等级）即使车辆受到一些物理伤害

260
00:28:39,874 --> 00:28:45,880
就像爆胎等，车辆需要想办法修复系统

261
00:28:45,880 --> 00:28:55,522
所以完全自动化的车辆能够处理的一切，这是等级5的目标

262
00:28:57,769 --> 00:29:07,512
在等级4，我们通过些许作弊，也就是提供了一些关于环境的附加的信息

263
00:29:07,512 --> 00:29:16,121
比如在环境中安装传感器，不是在车辆内部，而是从外部环境取得信息

264
00:29:16,121 --> 00:29:19,941
比如十字路口，或者建筑物的顶部等地方，利用无人机等

265
00:29:20,158 --> 00:29:23,962
为了给无人车提供更多的附加信息，使其能做决策

266
00:29:24,040 --> 00:29:32,248
例如，你正处于交通堵塞状态，在这种情况下，你会看不到远处的车辆

267
00:29:32,370 --> 00:29:39,711
也许可以利用外部环境传感器获取更多的信息

268
00:29:40,278 --> 00:29:46,718
比如，你前方有多少车辆，或者发生了什么特殊的情况

269
00:29:46,885 --> 00:29:49,745
这样你的自动驾驶汽车就可以做正确的决定

270
00:29:51,823 --> 00:30:03,902
我们人类不会那样开车，因为我们没有其他附加的鸟瞰信息

271
00:30:03,902 --> 00:30:11,943
所以我们必须运用我们的直觉，我们的眼睛和别的传感器，用来驾驶汽车

272
00:30:12,110 --> 00:30:16,330
所以在等级5也是如此，一切都可以在车辆中完成

273
00:30:17,600 --> 00:30:21,136
当然，要达到全部的这些，需要时间

274
00:30:23,688 --> 00:30:28,458
正如我们前面谈到的，在等级2， 驾驶员可以hands off（离开方向盘）

275
00:30:28,827 --> 00:30:37,168
可以做一些基本的巡航控制，一些有限制条件的车道保持

276
00:30:37,368 --> 00:30:44,008
所以特斯拉声称他们的自动驾驶功能（AutotoPilot）是合格的

277
00:30:44,247 --> 00:30:55,191
虽然特斯拉也许有一些引人关注的事情，和事故，

278
00:30:55,453 --> 00:31:04,028
但目前特斯拉仍然是在实现这一等级的自动驾驶方面最著名的公司之一

279
00:31:05,630 --> 00:31:14,372
现在大家看到的是一台凯迪拉克汽车，驾驶员可以驾驶这台车

280
00:31:14,372 --> 00:31:19,844
而且，在某些时刻就比如要驶入高速公路时

281
00:31:19,844 --> 00:31:24,682
当条件满足然后你可以使用主动巡行车速控制功能

282
00:31:25,116 --> 00:31:34,425
这样您的车辆就可以在某个固定的车速条件下持续驾驶，这样您就可以放松了

283
00:31:34,916 --> 00:31:38,220
无需继续驾驶，因为车辆会在同一车道上继续自动行驶

284
00:31:38,897 --> 00:31:53,478
还有当车辆感知到一些危险的情况，系统会警告存在一些危险

285
00:31:53,478 --> 00:31:58,249
这时驾驶员就需要接管

286
00:31:58,316 --> 00:32:02,987
你需要保持注意，比如当你看到那里闪烁的警告灯，你需要注意安全驾驶

287
00:32:02,982 --> 00:32:07,520
所以在这种情况下，你不能完全放松

288
00:32:07,919 --> 00:32:16,895
这个等级2，有一些难点，因为等级2需要驾驶员了解现在此刻在发生什么

289
00:32:16,901 --> 00:32:23,141
可以有一段时间即使驾驶员不再使用方向盘和离合器

290
00:32:23,875 --> 00:32:29,914
但问题是人类会过度信任技术

291
00:32:30,381 --> 00:32:32,591
导致当危险发生时对接管系统反应不过来

292
00:32:33,418 --> 00:32:38,022
所以等级2是自动驾驶技术发展的过度阶段

293
00:32:38,356 --> 00:32:42,060
因为过度依赖可能会导致危险

294
00:32:42,427 --> 00:32:46,931
对于等级3来说，也有同样的情况

295
00:32:46,931 --> 00:32:50,535
因为你必须在适当的时间对系统进行干预

296
00:32:51,502 --> 00:32:56,174
等级3，目前奥迪和本田声称已经达到这个等级

297
00:32:56,174 --> 00:33:01,713
他们可以为驾驶系统提供自动导航选项

298
00:33:01,713 --> 00:33:08,152
并且可以躲避障碍物，等级3有一个重要标志就是能够避开障碍物

299
00:33:08,152 --> 00:33:14,258
并且能完成等级2的所有功能，以及可以处理障碍物

300
00:33:15,360 --> 00:33:22,133
比如，奥迪有这个户外遥控停车场，你只需按下一个按钮

301
00:33:23,224 --> 00:33:29,531
车可以进自动停车，你可以简单的理解为

302
00:33:30,041 --> 00:33:35,346
当你到达某地之后，下车，按下智能手机服务中的按钮

303
00:33:35,346 --> 00:33:49,427
车辆就会通过自动行驶，在复杂的环境，寻找最优路径，开始导航

304
00:33:49,961 --> 00:33:54,771
然后，找到准确的停车位，完成自动停车

305
00:34:01,773 --> 00:34:08,980
这是另一个地方，这一台奥迪车，可以自动泊车

306
00:34:21,659 --> 00:34:27,130
现在我们看到的本田

307
00:34:27,130 --> 00:34:32,969
本田也是第一家开始销售，达到等级3的汽车的公司

308
00:34:48,152 --> 00:34:51,188
（当ACC/LKAS功能在高速公路被激活）

309
00:34:51,621 --> 00:34:54,858
（不需要手握方向盘的功能则被启动）

310
00:34:56,427 --> 00:35:01,065
（当“不需要手握方向盘也可变换车道”功能被启动）

311
00:35:04,569 --> 00:35:09,207
（当与前方车辆距离较近）

312
00:35:09,941 --> 00:35:14,479
（系统确认周围车辆并进行变道） 
（声音：车辆将向右边进行变道）

313
00:35:19,217 --> 00:35:23,988
（当确认完周围车辆为安全，车辆将打转向灯并进行变道） 
你可以在视频中看到

314
00:35:24,255 --> 00:35:26,624
车辆能够看到道路中的障碍物

315
00:35:26,624 --> 00:35:33,030
并且在高速公路上，然后向用户推荐换车道并开始自动转换车道

316
00:35:34,123 --> 00:35:40,096
所以它有巡行车速控制和车道保持控制功能

317
00:35:40,705 --> 00:35:46,465
并且，它可以自动转换车道，为了躲避障碍物

318
00:35:47,011 --> 00:35:55,686
为了确保安全，系统要求，至少一位驾驶员要监管环境是否畅通

319
00:35:56,510 --> 00:36:04,017
当然，为了能够避免事故，汽车上有传感器可以获取周围的信息

320
00:36:04,195 --> 00:36:08,099
但是，以防万一，车辆仍然要确认右边是否有其他车辆

321
00:36:09,734 --> 00:36:13,871
这里重要的是，无论如何

322
00:36:14,238 --> 00:36:19,944
汽车里的人需要关注驾驶环境，并适时接管，以防止发生危险情况

323
00:36:28,119 --> 00:36:33,391
（系统的通知声：请确认左边车道，现在开始转换车道）

324
00:36:36,060 --> 00:36:42,967
（系统对周边进行了确认，并回到非超车道 ）

325
00:36:46,537 --> 00:36:53,411
所以，当车辆想要转换回原来的车道，也同样需要保持注意

326
00:36:53,409 --> 00:37:00,850
请确保转换到左边的车道时安全

327
00:37:03,120 --> 00:37:12,296
所以当你购买这一类汽车时，需要在使用这些功能前接受培训

328
00:37:12,296 --> 00:37:17,201
需要明白在这些功能启动时，车辆需要你做什么，在什么情况一定要进行接管

329
00:37:18,135 --> 00:37:22,095
接下来我们有下一个演示视频

330
00:37:22,974 --> 00:37:27,411
这次也是等级3的自动驾驶车辆，在交通堵塞情况下的情况

331
00:37:27,411 --> 00:37:29,771
让我们去看一下吧

332
00:37:44,061 --> 00:37:49,400
（车辆在不需受持方向盘模式里，遇到了交通拥堵的情况）

333
00:37:49,433 --> 00:37:52,603
（当系统识别前后有车）

334
00:37:52,603 --> 00:37:54,372
（Traffic Jam Pilot将在车速低于30km/h时启动）

335
00:37:54,372 --> 00:38:00,611
（Traffic Jam Pilot被自动启动）

336
00:38:00,711 --> 00:38:06,050
（系统自动接管驾驶，并确认周围车辆）

337
00:38:07,551 --> 00:38:17,395
（当系统进行驾驶时，驾驶员可以观看视频）

338
00:38:19,163 --> 00:38:24,001
（当堵车情况解除）

339
00:38:24,201 --> 00:38:28,639
（系统要求驾驶员接管驾驶）

340
00:38:31,075 --> 00:38:34,545
（当驾驶员接管驾驶，系统将回到ACC/LKAS模式）

341
00:38:34,545 --> 00:38:40,051
（过一会，当条件符合，无需受持方向盘模式又可以启动）

342
00:38:43,154 --> 00:38:54,665
正如你们在视频案例中的看到的，这辆车能检测到当前的交通情况，交通拥堵

343
00:38:55,333 --> 00:38:58,733
这个技术是通过检测自己前方两个方向，和后方的车

344
00:38:58,803 --> 00:39:04,909
当交通拥堵的时候，这些车的行驶速度会变慢

345
00:39:07,345 --> 00:39:11,015
因为堵车可能需要一些时间，甚至可能会很长时间

346
00:39:11,015 --> 00:39:21,659
系统可以播放一些能够让人轻松的音乐/视频，让驾驶员可以挺过堵车的情况

347
00:39:21,692 --> 00:39:26,897
当堵车的情况结束的时候，由于很难预测其他车辆的行为轨迹

348
00:39:26,897 --> 00:39:32,403
是否还在堵车这个情况很难确定

349
00:39:32,803 --> 00:39:40,444
所以系统会想要求用户进行接管，来判断当前的情况是否还在堵车

350
00:39:42,179 --> 00:39:49,220
驾驶员接管了驾驶之后，当又满足自动驾驶条件时车辆又回返回自动驾驶模式

351
00:39:49,887 --> 00:39:53,958
这就是等级3里包含的功能定义

352
00:39:54,091 --> 00:39:56,894
车辆会持续地与驾驶员和车辆之间交互

353
00:39:57,128 --> 00:40:04,835
与等级2情况类似，驾驶员不可过度信任（自动驾驶）系统

354
00:40:05,002 --> 00:40:08,382
人们倾向于过度信任（依赖）系统，这是一个问题

355
00:40:08,383 --> 00:40:12,054
人们会认为车辆系统会为我们完成所有的操作，所以我可以分心

356
00:40:12,042 --> 00:40:17,748
当然，获得自动驾驶的驾驶服务非常重要，因为我们人类驾驶时会感到疲倦

357
00:40:17,748 --> 00:40:22,553
我们人类有时不太适合驾驶，有时因为人类驾驶，我们会发生交通事故

358
00:40:22,553 --> 00:40:25,756
我们想要科技来帮助我们减少车祸

359
00:40:25,756 --> 00:40:27,458
但是我们需要负责任

360
00:40:27,458 --> 00:40:31,562
试着去理解系统到底能做什么和正在处于什么状态

361
00:40:31,551 --> 00:40:35,789
驾驶员需要保持注意，不能完全放松或睡觉

362
00:40:35,790 --> 00:40:40,330
这些是在等级3，我们尚未解决的问题

363
00:40:42,072 --> 00:40:45,810
实现等级4和等级5，就是我们现在做的事情的终极梦想

364
00:40:46,243 --> 00:40:50,748
等级4的定义，有某些约束，如在某些地理范围（Geo-fenced）内

365
00:40:51,115 --> 00:40:57,721
或者一些限制，如定义在某一个ODD里可以运行的功能

366
00:40:58,122 --> 00:41:03,522
等级5的系统，又比等级4进步了一些，可以在任何条件下完成自动驾驶

367
00:41:03,527 --> 00:41:06,597
任何条件，任何时间，任何天气

368
00:41:06,597 --> 00:41:12,336
所以是无条件的自动驾驶。许多公司都在致力于达到等级4

369
00:41:12,736 --> 00:41:17,741
其中一些已经失败了，他们中的一些公司已经停止了这一等级的研发

370
00:41:17,741 --> 00:41:23,314
比如，之前Uber做了很多关于等级4的研究和演示

371
00:41:23,314 --> 00:41:28,786
然而出于一些原因，已经决定停止这些研究开发

372
00:41:28,789 --> 00:41:34,094
其他地方也做了同样的事，因为这个目标非常困难

373
00:41:34,391 --> 00:41:39,530
我们需要接管的人类驾驶员，并且驾驶不是个简单的行为

374
00:41:39,697 --> 00:41:43,734
不仅仅是车辆的问题，也涉及到人类

375
00:41:44,101 --> 00:41:49,507
如果大家都能遵守规则，那么问题会简单一些，可是有些人不遵守交通规则

376
00:41:49,940 --> 00:41:52,650
尤其是因为，自动驾驶汽车混在人类驾驶的汽车之间。

377
00:41:52,993 --> 00:41:58,565
所以，取而代之的是，人没想到了可以设置一些用于实现等级4的限制条件

378
00:41:58,916 --> 00:42:05,723
可以让自动驾驶车辆，在没有其他车辆的私人道路道路上行驶

379
00:42:06,090 --> 00:42:08,810
比如，像一些私人道路上，也许是可行的

380
00:42:09,159 --> 00:42:12,663
就像在一些工厂里利用的机器人上，很久以前就实现的那样

381
00:42:12,651 --> 00:42:20,759
然后，我们可以进一步实现，在有其他车辆或者人的私人道路上的自动驾驶

382
00:42:20,771 --> 00:42:27,344
那么这是一种新的ODD情况下的自动驾驶

383
00:42:27,344 --> 00:42:31,582
这是等级4的另一种形式

384
00:42:31,916 --> 00:42:36,720
再然后，可以尝试在公开道路上，在车里有其他驾驶员的情况下，实现自动驾驶

385
00:42:36,720 --> 00:42:40,925
这些也都是在等级4里可以逐步实现的

386
00:42:41,825 --> 00:42:45,329
而等级5，正如之前说的是超越等级4

387
00:42:45,329 --> 00:42:49,266
自动驾驶汽车将可以在任何地方，在任何情况下驾驶

388
00:42:51,302 --> 00:42:57,141
这里我们讲到了自动驾驶的不同的等级

389
00:42:57,141 --> 00:43:04,248
关于自动驾驶，仍然有有很多很多的误解，有很多人有各种不同的看法

390
00:43:04,248 --> 00:43:09,428
并试图以不同的方式销售自动驾驶汽车

391
00:43:09,486 --> 00:43:14,458
尤其是一些营销人员，我没有任何不尊重涉及营销的人的意思

392
00:43:14,458 --> 00:43:20,864
但营销的目标是创造一个可以销售的市场

393
00:43:20,864 --> 00:43:29,940
所以有时他们会去非常大胆（夸张）的说，我们已经解决了等级4的所有问题

394
00:43:29,940 --> 00:43:35,910
他们可能会说我们可以向您保证，您将拥有一辆 100% 等级4的汽车

395
00:43:35,913 --> 00:43:42,152
我们几乎已经开始着手于等级5了，这不真实，不现实

396
00:43:42,152 --> 00:43:49,293
这个说法中缺少很多东西，比如没有提到安全性的问题

397
00:43:50,010 --> 00:43:58,685
这只是一个销售人员和营销人员的，关于自动驾驶的一个愿景

398
00:43:58,670 --> 00:44:11,849
管理者，尤其是高层管理人员CEO 或 CTO，公司里对技术更加清楚的负责人需要更加现实一点

399
00:44:11,849 --> 00:44:18,155
有责任向用户阐述这些功能的现状和事实，这些技术尚处在测试阶段

400
00:44:18,355 --> 00:44:21,825
想要完全实现自动驾驶还需要几年的时间

401
00:44:21,825 --> 00:44:26,997
但我们可以做概念证明，我们可以部署一些技术，用于展示这些技术的效果

402
00:44:26,997 --> 00:44:30,834
然后我们可以把这些功能提供给你们，这样的计划才比较现实一些

403
00:44:31,669 --> 00:44:36,106
虽然没有谈到测试的结果部分

404
00:44:36,106 --> 00:44:39,506
但是这样更加有说服力，因为这更加真实

405
00:44:40,010 --> 00:44:49,920
作为研究人员，我们知道想到达到人类驾驶员的能力

406
00:44:49,920 --> 00:45:00,431
如同有一个人类坐在驾驶位置上驾驶，我们还必须做很多事情

407
00:45:00,431 --> 00:45:08,238
软件还没有达到这个水平，我们需要利用这些科技为用户带来安全的服务

408
00:45:08,238 --> 00:45:18,882
我们研究人员，也许并不关心销售成绩，但我们需要做一些关于技术的演示

409
00:45:18,882 --> 00:45:29,226
我们正在致力于解决这些难题，也许在某个时刻，我们会实现产业的需求

410
00:45:29,226 --> 00:45:35,733
我们需要保持一种研究和工业之间的协同关系

411
00:45:35,733 --> 00:45:40,771
而政府部门，虽然在这里我不会涉及到政府部门的话题

412
00:45:40,771 --> 00:45:49,913
但政府应该理解自动驾驶技术的潜力，特性，以及发展上的限制

413
00:45:50,214 --> 00:45:57,187
允许自动驾驶与其他人或者车辆，使用相同的环境

414
00:45:57,187 --> 00:46:05,095
并且为使用自动驾驶的人，提供保障其安全出行所需的条件

415
00:46:05,095 --> 00:46:09,700
例如，为了促进自动驾驶，向驾驶员和步行者路人

416
00:46:09,700 --> 00:46:14,505
提供（自动驾驶相关）保险等服务

417
00:46:14,505 --> 00:46:18,609
还可以为自动驾驶研究提供测试场地

418
00:46:18,609 --> 00:46:24,782
学术界，工业界和政府这三个方面

419
00:46:24,782 --> 00:46:30,454
需要协同工作，以促使自动驾驶的早日实现

420
00:46:31,173 --> 00:46:35,377
自动驾驶的最终目标和梦想是实现等级5

421
00:46:35,392 --> 00:46:41,899
从等级4逐步实现等级5有两种不同的路径

422
00:46:41,899 --> 00:46:46,370
第一种就是一些车企所采用的传统流程

423
00:46:46,364 --> 00:46:53,271
我们自己完成所有需要的开发，开发汽车，各个部件，还要开发所需的智能软件

424
00:46:53,271 --> 00:46:58,910
为什么不自己实现里面的高级别的软件呢，这就是传统公司的观点

425
00:46:58,916 --> 00:47:05,155
因为这样需要自己做全部，所以可能需要更多时间和努力

426
00:47:05,155 --> 00:47:09,927
也许因为他们已经实现了其中一部分，所以对于他们而言，这个方法也许更简单一些

427
00:47:10,160 --> 00:47:14,565
可是无论如何，这个方法需要大量的工作和时间

428
00:47:14,565 --> 00:47:24,441
另外一种实现高度自动化功能的方法有与其他参与者协同工作

429
00:47:24,441 --> 00:47:33,116
比如服务的多家供应商一起提供所需的一切，把相关的都连接起来

430
00:47:33,116 --> 00:47:36,886
这样可以一起实现高等级的自动化了

431
00:47:36,887 --> 00:47:41,558
这个方法会导致系统里有许多不同的子系统

432
00:47:41,558 --> 00:47:45,829
这可能会导致系统更加容易发生错误

433
00:47:45,818 --> 00:47:50,023
这两种就是我们能实现等级5的路径

434
00:47:52,369 --> 00:48:01,178
现在丰田，本田，奥迪等等大企业，正朝着实现等级3，等级4迈进

435
00:48:01,190 --> 00:48:12,267
有人甚至声称要实现等级5，他们提供了多种解决方案

436
00:48:12,256 --> 00:48:14,725
比如丰田公司提出的e-Palette项目

437
00:48:14,725 --> 00:48:23,133
他们指出这个不仅仅是关于车辆的服务，而是关于移动出行的服务

438
00:48:23,133 --> 00:48:28,605
因此丰田声称自己已不再是一辆单纯的车企

439
00:48:28,620 --> 00:48:33,057
车辆本身也不再是重要的商品，甚至声称可以让一些车辆供应商（为其造车）

440
00:48:33,610 --> 00:48:41,885
但重要的是拥有移动出行服务，所以他们现在已经转型为移动出行企业

441
00:48:42,853 --> 00:48:52,095
现在，还有其他软件公司也提出类似的想法，如谷歌，Waymo

442
00:48:52,095 --> 00:49:04,942
他们也想提供出行方案，丰田汽车等汽车厂商也不想落后，也在开始提供移动解决方案

443
00:49:08,312 --> 00:49:15,152
关于CASE的一个重要方面，是效率和经济

444
00:49:15,552 --> 00:49:22,826
正如我们之前提到的，如果我们有这样的车辆，如本田车

445
00:49:24,594 --> 00:49:32,602
自动驾驶混在人类驾驶的车里，这会降低出行的压力，比如减少堵车等情况的发生

446
00:49:32,602 --> 00:49:36,032
并且这会使得我们的驾驶更加安全等等

447
00:49:36,034 --> 00:49:44,075
如果我们周围所有的车都是电动汽车，那么理论上，我们不会再有交通堵塞现象

448
00:49:44,781 --> 00:49:49,152
每辆车都是电动的，那么也不会有尾气排放

449
00:49:49,160 --> 00:49:53,865
而且因为一切都得到了适当的控制优化，汽车碰撞导致的事故也会变少

450
00:49:54,858 --> 00:50:01,098
人类会更加安全和放松，而且因为每辆车都可以自动驾驶

451
00:50:02,032 --> 00:50:10,107
我们不需要找靠近我们的工作场所的停车位，这样车就可以去一些公共区域

452
00:50:11,641 --> 00:50:20,150
回来时自动驾驶汽车来接我们回家，从而更好地利用土地，这是可以实现的

453
00:50:20,250 --> 00:50:27,624
因为这些车辆是可以被拥有或被共享的

454
00:50:28,158 --> 00:50:34,998
比起使用共享系统，购置一台自动驾驶汽车，起初需要一大笔的费用

455
00:50:34,987 --> 00:50:47,733
如果只是自己使用一辆车，从长远来看拥有它是最便宜的选择

456
00:50:48,478 --> 00:50:51,148
但是共享汽车也许是更好的解决方案

457
00:50:55,685 --> 00:51:05,962
关于CASE (Connected Automated Sharing Electric)，和自动驾驶车辆还有其他方面要讲

458
00:51:05,962 --> 00:51:13,570
车辆给人类的生活带来了很多改变，车辆事故就是其中之一

459
00:51:13,570 --> 00:51:21,711
据说每年在世界各地有超过100万人死于车祸，我们想改变这个消极的状况

460
00:51:22,345 --> 00:51:30,865
还有交通堵塞问题也为我们带了很多损失

461
00:51:31,188 --> 00:51:38,361
因为人们不能在及时到达工作场所，人们不得不花一些时间在车里

462
00:51:38,361 --> 00:51:43,867
尾气排放是车辆带来的另一个重要方面，尤其是在交通拥堵的时候

463
00:51:43,934 --> 00:51:51,808
还有在新的社会条件下，人口金字塔倒置问题

464
00:51:52,142 --> 00:52:04,788
每年新生儿都越来越少，年轻人和孩子越来越少，而中老年人越来越多

465
00:52:04,788 --> 00:52:11,761
这意味着老年人在全社会人口占比会变多，而老年人也许不是很好的司机

466
00:52:12,028 --> 00:52:20,537
老年人可能会受到感官系统功能衰退的影响，认知能力，驾驶汽车的敏捷性也有可能随着年龄的增长而降低

467
00:52:20,537 --> 00:52:26,977
所以他们中的部分人可能不再适合开车

468
00:52:27,978 --> 00:52:36,520
年轻人可能受过教育年轻人，可能因受过教育可以从事的工作

469
00:52:36,520 --> 00:52:45,328
有些工作还是需要老年人来做，就像物流快递，用货车送货，搬运行李等等

470
00:52:45,362 --> 00:52:52,335
在业务量没有减少，而人口的问题，缺少司机（Shortage of Drivers）每次都会成为一个问题

471
00:52:56,072 --> 00:53:05,015
在人口问题上，诸如日本，我想在世界其他地方，也会有类似的问题

472
00:53:05,015 --> 00:53:19,462
新的工作，新的生活区域开放了，因为那里土地便宜，人们就会移居到那里

473
00:53:19,462 --> 00:53:25,152
新区域的生活的成本相对较低，这样使得他们可以拥有自己的住房

474
00:53:25,402 --> 00:53:31,007
或者可以拥有自己的田地等等，许多人来到新开发的区域，形成新的社区

475
00:53:31,007 --> 00:53:38,014
可是这一类人口的子女，成年有可能选择离开这个区域，至少有部分新一代人口可能会想去大城市

476
00:53:38,181 --> 00:53:49,492
留下来的人口只有老年人，然后逐渐地这些老年人口也会减少

477
00:53:49,492 --> 00:53:55,498
在这个区域居住的人口越来越少，前往该地点的交通工具也随着逐渐减少没落

478
00:53:55,498 --> 00:54:00,770
所以这个人口金字塔倒置问题演变成了很严重的问题

479
00:54:02,138 --> 00:54:06,776
CASE带来的社会变革方面的影响，包括了出行即服务(Mobility as a Service)

480
00:54:07,110 --> 00:54:11,081
乘客经济，和物流变革等方面

481
00:54:12,782 --> 00:54:22,459
这里是对日本人口演变的预测，数据来自日本全国人口和社会保障研究所

482
00:54:23,293 --> 00:54:32,035
从这张图大家可以看到人口数的变化情况，在超过75年期间，人口是呈现增长的

483
00:54:32,168 --> 00:54:38,308
可是实际上年轻一代人口的数量正在急剧下降，这是一件非常严肃的事情

484
00:54:38,908 --> 00:54:45,749
不仅是日本，许多地方都正在发生这样的情况

485
00:54:45,749 --> 00:54:53,390
这意味着人口金字塔的顶端老年人的数量越来越多

486
00:54:53,390 --> 00:54:59,996
但他们不再适合驾驶汽车了，我们需要为他们带来其他解决方案

487
00:54:59,996 --> 00:55:07,971
帮助老年朋友生活自由独立，比如可以自由的出行去购物，去医院，去看家人

488
00:55:07,975 --> 00:55:14,815
但是因为老年朋友驾驶汽车已经变得不方便，感知能力的衰弱会导致出行不便

489
00:55:15,512 --> 00:55:20,583
我们需要为他们提供一种出行的方式，帮助他们自由独立的生活

490
00:55:21,384 --> 00:55:27,324
(CASE)移动解决方案，被认为是可以解决这个问题的一个方案

491
00:55:29,192 --> 00:55:35,462
另外，自动驾驶的技术为

492
00:55:36,199 --> 00:55:49,679
在客运车辆，物流，出行即服务，运输等领域创造了许多商业机会

493
00:55:49,979 --> 00:56:03,126
为很多领域创造了利益，包括，室内，工厂，农业，采矿，建筑，道路维护

494
00:56:03,793 --> 00:56:12,369
自动化在这些领域都是可以实现的，这些变革正在逐步发生

495
00:56:12,362 --> 00:56:18,101
这些改变不仅仅是关于车辆的，车辆是最容易被理解的

496
00:56:18,109 --> 00:56:20,744
因为我们每天的生活场景里离不开车辆

497
00:56:20,744 --> 00:56:27,617
这些变革也涉及到机器人，机器人也在这个社会扮演着重要的角色

498
00:56:27,617 --> 00:56:31,755
我们不经常看到机器人，是因为机器人通常出现在工厂这样的场景里

499
00:56:32,422 --> 00:56:40,130
现在我们会不时的看到它们，有时在餐馆这类的场景里，有时看到一些机器人的在演示一些服务

500
00:56:40,630 --> 00:56:47,437
我们人类理解什么是汽车，我们驾车出行，对汽车更加熟悉

501
00:56:48,171 --> 00:56:53,576
所以对车辆进行自动化的影响是更大的

502
00:56:53,681 --> 00:56:58,219
但我们需要记住，汽车上做的大部分事情是从机器人开始的

503
00:56:59,916 --> 00:57:09,526
这个领域不仅仅是关于机械，汽车的底盘等车辆的硬件相关的部分

504
00:57:09,526 --> 00:57:13,463
也包括软件等部分，甚至说软件部分是主要的

505
00:57:13,463 --> 00:57:20,036
可以说自动驾驶功能有80%，90%取决于软件部分的性能

506
00:57:20,036 --> 00:57:30,113
而软件部分涉及的领域如此之多，像人工智能，数据科学，机器人学传感器，车辆工程学

507
00:57:30,847 --> 00:57:36,386
比如计算机网络，通信，以及如何在硬件平台进行计算等领域

508
00:57:38,421 --> 00:57:48,998
因此，当开发了驾驶解决方案时，OEMs

509
00:57:48,998 --> 00:57:54,971
供应商需要找到合作伙伴，帮助他们达成想要的目标

510
00:57:54,971 --> 00:58:01,644
为了更快的达成目标，大学，研究所和企业可以一起作出贡献促使这一结果的发生

511
00:58:09,419 --> 00:58:18,294
那么现在让我们看一下市场上的一些趋势，看看这些科技会怎样影响我们的未来

512
00:58:18,628 --> 00:58:25,335
为了实现理想的自动驾驶社会，我们会有专门用来服务的车辆（Service Cars）

513
00:58:26,000 --> 00:58:31,238
这些是被定义和设计用于特定的ODD的

514
00:58:32,242 --> 00:58:39,048
这些车也许并不常见，有些也许是私人使用的（Privately Owned Cars）自动驾驶车辆

515
00:58:39,048 --> 00:58:45,555
一些等级2和等级3的车已经被大量生产和销售了

516
00:58:45,555 --> 00:58:58,434
但是等级4的车辆，大部分情况下，这些车辆主要用于在工厂，用于清理道路等等

517
00:59:01,689 --> 00:59:08,028
对于自动驾驶车辆的升级 ，比如一些服务车辆（Service Cars），或者私家车（Privately Owned Cars）

518
00:59:08,679 --> 00:59:13,651
会随着阶段逐渐升级，现在我们还处在这个技术的初始阶段

519
00:59:14,517 --> 00:59:18,555
我们会发展到调试/适应这个技术的阶段，与市场进行调整，

520
00:59:18,555 --> 00:59:30,066
在私家车领域，已经实现了等级2和等级3，2025年以后更多先进的功能会得到应用

521
00:59:30,650 --> 00:59:41,827
2020，哦，不好意思，说错了，2030年以后，等级3，等级4会得到商业化和产品化

522
00:59:44,113 --> 00:59:52,021
对于服务车辆（Service Cars）例如用户可以乘坐的自动驾驶｜车辆或者用于运输货物的车

523
00:59:52,021 --> 00:59:58,895
我们也可以看到随着时间，技术会得到改善

524
00:59:58,892 --> 01:00:06,033
我们可以看到市场将会拓展到更多的应用，和更多的领域

525
01:00:06,035 --> 01:00:10,573
而这些应用也会根据不同的路况｜比如高速公路或者城市道路，而不同

526
01:00:10,573 --> 01:00:17,347
而2030年之后，技术的应用会对环境更加适应

527
01:00:19,749 --> 01:00:29,892
关于这个技术，我们还需要技术与生活更加的融合，更加符合我们的生活需求

528
01:00:30,093 --> 01:00:32,662
并能够与其他人的需求更加兼容

529
01:00:33,319 --> 01:00:39,558
仅仅因为自动驾驶车辆的存在，我们不能要求其他的道路使用

530
01:00:40,403 --> 01:00:44,707
不能对他们说请不要手动驾驶了

531
01:00:45,508 --> 01:00:55,885
我们必须与环境相融合，目前我们是在软件里定义需要处理的一切

532
01:00:59,188 --> 01:01:08,131
在自动驾驶的技术领域，只靠自己去完成所有的事情是非常困难的

533
01:01:08,464 --> 01:01:14,871
也因此已经存在一个生态系统，这个系统里有多家公司

534
01:01:15,204 --> 01:01:23,646
在许多不同领域做不同事情，自动驾驶汽车的所有组成部分，可以合作起来一起实现

535
01:01:26,382 --> 01:01:38,494
我们可以思考一下手机的例子，手机也经历了一个开源的生态系统的发展过程

536
01:01:39,896 --> 01:01:48,771
比如在90年代第一代的手机，是一个这样的手持设备

537
01:01:49,138 --> 01:01:57,213
在2000年代，出现了智能手机，然后出现了安卓系统

538
01:01:57,747 --> 01:02:07,557
手机也是这样占领了市场，变成了我们现在使用的手机

539
01:02:08,291 --> 01:02:14,363
对于个人电脑(PC)和其他产业也经历了类似的发展途径达到一个这个产业的垄断

540
01:02:14,363 --> 01:02:20,837
处于这样的目的，自动驾驶也需要一个可以交互的生态系统

541
01:02:23,005 --> 01:02:36,586
许多自动驾驶的公司，比如TierIV也认识到了这一点，他们想针对不同的客户提供这些技术

542
01:02:36,586 --> 01:02:44,994
这样他们就可以为自动驾驶车辆提供各种软件方案，比如说，一些用来监视, 支持，检测天气的服务

543
01:02:45,728 --> 01:02:52,702
他们拥有的所有东西都是一些软件，也就是现如今的Autoware

544
01:02:53,402 --> 01:02:59,342
Autoware一开始是由名古屋大学开发的，后来被转到TierIV ，再后来就是Autoware Foundation由管理

545
01:02:59,442 --> 01:03:06,415
他们现在的商业模型就是，基本上就是结合这些Autoware Foundation拥有的功能

546
01:03:06,415 --> 01:03:10,787
用来为更多的用户，解决更多的用户需求，提供更多的服务

547
01:03:14,957 --> 01:03:23,733
现在，让我们讨论一下开源的自动驾驶

548
01:03:30,239 --> 01:03:32,609
在这个讨论中我们要先提一下，为什么（开源）软件很重要

549
01:03:38,581 --> 01:03:42,285
也就是说为什么要投资在一个需要，很多研究人员，研究团队，长年研究，

550
01:03:50,260 --> 01:03:52,929
而，大家都可以使用的软件

551
01:03:53,453 --> 01:03:56,590
那么，这里的游戏是为什么呢，所以我们想先谈谈这个

552
01:03:58,400 --> 01:04:04,930
然后在介绍，ROS,　Autoware, apollo，是怎么为开源软件作出贡献的

553
01:04:06,720 --> 01:04:09,870
为什么要全力以赴并将其奉献给社区，这整个想法是这样的

554
01:04:15,360 --> 01:04:18,100
因为，（开源）社区会包含每个人的改进，这样一来，我们就不需要去实现每一个功能

555
01:04:25,289 --> 01:04:28,426
这种情况通常会发生在当你要尝试开发一项新技术

556
01:04:29,932 --> 01:04:33,992
大多数时候，你想开发的新技术，在开源的版本中已经有人实现过了

557
01:04:34,904 --> 01:04:39,876
了解别人是如何设计，如何实现的，了解什么样的决策会导致更差的结果

558
01:04:45,180 --> 01:04:48,950
让你在自己的应用开发里少走弯路

559
01:04:48,950 --> 01:04:52,570
许多常见的任务，在社区里都可以找到不同的尝试

560
01:04:55,250 --> 01:04:59,260
比如有些人是做控制的，有些人做传感器的，有些人是做路径规划的

561
01:05:01,197 --> 01:05:03,300
社区里有那么多不同的东西，有些人有一些更加聪明的解决方法

562
01:05:05,200 --> 01:05:08,480
可以把他们的尝试放到一起，做一些共同的任务，形成一个共同的平台

563
01:05:11,460 --> 01:05:16,070
并为社区提供服务，最先进的尖端技术，方法可以被快速验证

564
01:05:21,220 --> 01:05:24,150
如果你有一台机器人或者一辆车，想尝试着做一些关于路径规划的研究

565
01:05:31,960 --> 01:05:34,650
但你没有软件平台也没有相关的软件，路径规划取决于传感器，路径规划的结果需要送到控制端去

566
01:05:38,320 --> 01:05:40,690
如果你没有传感器，识别，和控制等等的模块的话，就不能测试路径规划的算法

567
01:05:43,950 --> 01:05:48,990
这个（开源的）想法是为了能够测试你自己的研究

568
01:05:50,350 --> 01:05:52,930
你可以利用这些平台不必每次都重新实现这些功能

569
01:05:52,930 --> 01:05:55,540
以前我们是这样做的，比如，在机器人领域，当我们想开发执行某些指令的功能

570
01:05:57,728 --> 01:05:59,330
这些功能用于完成某些任务，我们不得不从头开始写代码，因为那之前什么都没有

571
01:06:04,140 --> 01:06:08,660
通过开源的研究社区，人们可以保持专注于自己的特定领域，进行测试

572
01:06:19,380 --> 01:06:22,200
而这个研究结果又可以造福这个社区

573
01:06:29,810 --> 01:06:32,579
但这不是开源社区必须免费的原因，没有必要一定免费

574
01:06:34,280 --> 01:06:39,300
你可以购买某些代码用于测试，但这并不意味着你可以免费获得

575
01:06:43,890 --> 01:06:46,400
出于什么原因，使用者或许对某些代码有疑问，或者需要以某种方式进行修改，而使用者又不知道怎么做

576
01:06:49,660 --> 01:06:53,680
那么原作者，可以向使用者收取一些费用，来帮助你解决你的问题，这就是为什么开源可以成为一种商机

577
01:07:01,510 --> 01:07:05,500
因为你创作了一款优秀的软件，有就像Autoware，其他一些公司为了用于自己的特定应用

578
01:07:10,349 --> 01:07:14,320
会有某些特定的需求，比如，Autoware在被发布之后，引起了许多不同的汽车制造商的兴趣

579
01:07:22,540 --> 01:07:28,260
比如，丰田对于他们来说，从零开始搭建整个框架系统是一项艰巨的任务，即使他们是一家大公司

580
01:07:29,157 --> 01:07:31,960
为了完成某些开发任务，一开始可能没有专业人才或者资源可以马上着手（开发）

581
01:07:40,380 --> 01:07:43,916
所以他们可以先开始用Autoware，可Autoware并不完全匹配他们的需求

582
01:07:45,640 --> 01:07:48,490
因为他们想要测试的是特制的一些功能，这样两家公司之前的业务就可以成立了

583
01:07:53,247 --> 01:07:56,984
第一个业务是提供软件修改配置

584
01:07:58,707 --> 01:08:04,013
第二个则是，帮助定制服务或者根据需求去匹配适合的源代码

585
01:08:07,175 --> 01:08:11,280
特别是当客户有定制需求的时候，这就是开源代码的使用方式

586
01:08:14,510 --> 01:08:18,939
其实过去有一些很好的公司完全反对开源，比如过去的微软

587
01:08:26,290 --> 01:08:29,970
他们甚至告诉所有开源的人这是非常糟糕的事情，对企业很不利，说这是个坏主意

588
01:08:36,630 --> 01:08:40,460
现在他们开始明白开源是可以获利的，而且整个社区也会因此而成长，自己也会得到进步

589
01:08:47,319 --> 01:08:55,020
ROS系统是机器人操作系统，是由机器人基金会创建的

590
01:09:00,035 --> 01:09:05,207
过去是由一群人发起的，后来他们成立了一家叫做Willow Garage的企业

591
01:09:06,694 --> 01:09:10,800
他们不仅开发机器人还想写一些可以被利用的共通代码

592
01:09:15,130 --> 01:09:20,750
并且希望这些代码可以被社区里其他人也能利用

593
01:09:25,250 --> 01:09:30,220
因此他们开发了ROS系统，大约在2007年左右，从那一刻起ROS系统在社区中变得非常流行

594
01:09:35,920 --> 01:09:43,660
他们在2009年发布了第一代的ROS系统

595
01:09:43,660 --> 01:09:48,300
ROS一代出于某些原因，每次发布一个新的版本会使用乌龟作为为宠物

596
01:09:56,510 --> 01:10:04,820
所以每个版本的ROS系统都以一种乌龟种类的名称命名，你们听到的名称里有这样几种

597
01:10:11,215 --> 01:10:16,120
Indigo Igloo，Indigo是一个形容词靛蓝，Igloo实际上是一种乌龟品种的名称

598
01:10:21,915 --> 01:10:26,320
或者是一些与乌龟相关的词汇，比如这里的Lunar Loggerhead

599
01:10:26,320 --> 01:10:31,380
Loggerhead 是一种乌龟的品种，而Lunar是一个有相同的首字母与乌龟相关的词

600
01:10:32,900 --> 01:10:37,750
然后在2015年的某个时间点之后发布了ROS2代

601
01:10:40,400 --> 01:10:45,750
在ROS2，我们后面的课程也会讲到，决定摆脱很多一直影响ROS1代的问题

602
01:10:49,850 --> 01:10:53,710
其中之一就是，（ROS一代）缺乏实时处理能力

603
01:10:54,259 --> 01:10:58,530
ROS2已经声称，大部分的社区已经逐渐从ROS1代转到了ROS2代，现在大部分的开发都是基于ROS2代的

604
01:11:02,660 --> 01:11:08,690
事实上，ROS1代的最后一个版本是2020年发布的，这是他们发布的最后一个版本ROS1代

605
01:11:23,540 --> 01:11:29,030
因为他们现在已经集中在做ROS2代了，ROS Noetic Ninjemys, 这里Noetic是一个乌龟的品种名

606
01:11:36,500 --> 01:11:41,330
是ROS第13次正式发布的版本，也是最后一个版本（的ROS1代）

607
01:11:42,240 --> 01:11:48,400
ROS里发布的所有项目的，是为了打造一个能协作的机器人提供所需的工具包

608
01:12:00,140 --> 01:12:03,470
不仅限于机器人，ROS也非常适合用于自动驾驶汽车的开发

609
01:12:03,470 --> 01:12:13,890
（开发）自动驾驶汽车和机器人基本上是一样的，需要调整速度等信息，解决人类是否驾驶等问题

610
01:12:19,010 --> 01:12:25,550
ROS提供功能包括，Plumbing用于程序之间的通信，运行程序，并传送程序之间的信息

611
01:12:30,010 --> 01:12:33,113
还有用于可视化的工具，坐标变换，访问数据的不同模式，数据记录等等功能

612
01:12:37,740 --> 01:12:39,980
还包括一些能够设计算法的能力，比如，包含一些预先写好的相对较简单的算法

613
01:12:45,880 --> 01:12:50,800
比如一些算法是涉及路径规划，聚类（分类），或者物体识别的，这些都是公开提供的

614
01:12:56,560 --> 01:12:59,730
在很多社区，都在展开一些关于ROS的活动，

615
01:12:59,730 --> 01:13:04,600
像在工作坊或者在学术会议上，也有人介绍了相关的知识

616
01:13:06,362 --> 01:13:10,800
所以许多人开始关注ROS，并且开始使用它，形成了一个世界范围的生态系统

617
01:13:16,020 --> 01:13:20,940
大家都在利用ROS，不仅如此，ROS还有很多文档和教程

618
01:13:26,950 --> 01:13:29,480
安装很简单编写代码可以用 C++完成，也可以用Python完成

619
01:13:34,400 --> 01:13:38,030
而且你可以理解ROS，这是一件ROS里有的很棒的事情

620
01:13:38,030 --> 01:13:41,660
关于ROS，现在出现了两个不同自动驾驶车辆的平台Autoware和apollo

621
01:13:49,050 --> 01:13:55,090
Autoware是2014，2015年左右在名古屋大学诞生的

622
01:13:55,090 --> 01:14:00,328
然后由一家日本的叫做TierIV的公司，接管并且持续开发

623
01:14:01,740 --> 01:14:06,660
使其商业化，并处理客户提出的许多个性化的要求

624
01:14:11,230 --> 01:14:14,900
现在甚至发展的更远，已经成长为一个叫做Autoware Foundation的组织

625
01:14:14,880 --> 01:14:18,940
现在是一家，联合了多家企业，研究机构和社区，致力于改善Autoware的机构

626
01:14:27,763 --> 01:14:32,573
apollo是一个开源的自动驾驶汽车平台

627
01:14:34,020 --> 01:14:36,960
是由百度这家公司研究和开发的

628
01:14:36,960 --> 01:14:39,410
百度拥有监督整个系统的权限

629
01:14:41,370 --> 01:14:44,180
所以在某一个意义来说，对于社区而言没有那么开放

630
01:14:45,129 --> 01:14:48,132
使用者可以下载代码，还可以根据自己的需要进行调整

631
01:14:52,187 --> 01:14:55,707
但由于开发受到百度的监督想要创新会有点困难

632
01:14:55,690 --> 01:15:01,160
这个平台也在世界上非常受欢迎

633
01:15:01,160 --> 01:15:08,910
很多公司正在使用它，最新的发布的版本是6.0

634
01:15:08,910 --> 01:15:15,200
那么，它们有什么不同呢

635
01:15:16,580 --> 01:15:19,970
Autoware基本上是基于ROS系统的，其中Autoware AI是基本上基于ROS1代的

636
01:15:23,430 --> 01:15:28,850
是基于ROS1的最新一个版本的，而apollo也是基于部分ROS1代的

637
01:15:33,800 --> 01:15:35,300
但是他们发现了ROS1代的很多问题

638
01:15:35,300 --> 01:15:37,970
Autoware也发现了，所以Autoware决定从ROS1代转向ROS2代了

639
01:15:40,390 --> 01:15:43,990
而apollo则决定搭建了自己的系统，这个新系统叫做apollo Kernel

640
01:15:44,334 --> 01:15:46,970
他们决定放弃使用ROS，而决定使用apollo Kernel

641
01:15:51,880 --> 01:15:58,340
从而能够控制底层的机器人操作系统

642
01:15:58,340 --> 01:16:01,820
安装Autoware的方法，有用Docker

643
01:16:01,820 --> 01:16:05,840
或者直接从源代码就行安装和编译，这个也被称为native install

644
01:16:05,840 --> 01:16:11,120
apollo只能用Docker安装，需要调整参数

645
01:16:11,120 --> 01:16:14,356
可视化系统，Autoware用的是运行时管理器（the runtime manager）

646
01:16:14,360 --> 01:16:17,300
RViz，也就是ROS自带的可视化工具

647
01:16:17,306 --> 01:16:24,806
apollo则有这个非常漂亮的网络界面Web interface-Dreamview

648
01:16:25,340 --> 01:16:27,210
那么什么是Autoware呢，它是第一个世界上第一个开源的

649
01:16:33,370 --> 01:16:41,480
基于ROS的自动驾驶平台的，它包含所有的ROS的功能

650
01:16:45,780 --> 01:16:49,350
及所有的实现全自动驾驶所所需的功能

651
01:16:50,740 --> 01:16:54,720
Autoware并不是由一个小团体开发的作品

652
01:16:58,760 --> 01:17:02,363
它有来自全球范围内的帮助，许多的企业都参与其中

653
01:17:02,340 --> 01:17:06,390
在这里你可以看到一些事实，比如平台支持30加种车辆类型

654
01:17:07,356 --> 01:17:09,826
不是30辆车，而是30种不同的车型

655
01:17:11,540 --> 01:17:16,230
被世界上多个国家支持，并且正在被多家企业采用

656
01:17:30,278 --> 01:17:34,516
这也证明了，如果一个完全开源的平台，遵守社区发展的标准

657
01:17:35,217 --> 01:17:38,017
遵循共通并且规范的原理原则，那么开源的项目也会被广泛的接受

658
01:17:41,720 --> 01:17:47,360
整个框架包含几个重要的功能

659
01:17:48,680 --> 01:17:52,820
传感（Sensing）是利用传感器来收集外部的信息，以及车辆内部的信息

660
01:17:58,770 --> 01:18:03,270
定位（Localization）则是找到车辆在这个世界上的当前位置

661
01:18:04,590 --> 01:18:08,740
使用传感器数据，并通过传感器数据，以及潜在的地图数据

662
01:18:13,970 --> 01:18:21,710
试图找到你在当前地图上的相对位置

663
01:18:21,697 --> 01:18:25,901
还有感知（Perception）功能，感知功能可以获取传感器数据

664
01:18:25,900 --> 01:18:29,169
并且可以通过潜在的地图数据，试图去检测自己所处环境里物体的信息

665
01:18:32,870 --> 01:18:36,080
比如有一些静态（static）的物体，如汽车

666
01:18:36,080 --> 01:18:38,790
如果有些移动的物体不是静止的，而是动态（dynamic）的

667
01:18:40,540 --> 01:18:43,630
那么你可以追踪它是怎样随着时间移动的

668
01:18:43,630 --> 01:18:46,610
比如生成它到目前为止的移动轨迹（trajectory）

669
01:18:47,008 --> 01:18:52,080
甚至你可以预测它们将来的移动轨迹是怎样的

670
01:18:52,080 --> 01:18:57,000
路径规划就是寻找一条从出发点到目标地之间的最优路径

671
01:19:00,740 --> 01:19:03,860
以及怎样躲避障碍物，怎样躲避不同危险程度的障碍物

672
01:19:08,450 --> 01:19:11,470
当检测到交通信号时需要停车等等，也包含泊车功能

673
01:19:15,860 --> 01:19:19,063
控制（Control）取得来自路径规划的信息，并生成所需要的指令输出给车辆

674
01:19:21,610 --> 01:19:25,550
比如，具体转向盘需要转多少角度，需要加速多少等

675
01:19:27,570 --> 01:19:30,790
并直接发送给连接到车辆的一个车载接口（vehicle interface）

676
01:19:34,700 --> 01:19:36,840
也可以接收来自远程的命令，如车站发来的信息

677
01:19:40,060 --> 01:19:44,660
不仅可以接受来自自动驾驶汽车，还有远程车站的信息

678
01:19:44,660 --> 01:19:49,610
远程中心可以给车辆发送信息来控制车辆行为

679
01:19:49,610 --> 01:19:52,540
Autoware Community非常庞大，这个社区是在Github上运营的

680
01:19:56,825 --> 01:19:59,965
现在已经拥有超过 4000 stars以及超过1800的forks

681
01:20:00,729 --> 01:20:06,039
社区有非常多的贡献者和成员，这个资料里展示的这些数据不是最近的

682
01:20:12,880 --> 01:20:16,980
现在社区已经有500多家企业和20多个国家等成员

683
01:20:21,241 --> 01:20:26,079
另外，在教育领域，Autoware被认为是用于教育的标准平台

684
01:20:26,540 --> 01:20:32,110
Autoware也被OEMs(代工厂商们) 用于概念验证和制作产品原型

685
01:20:33,592 --> 01:20:37,730
Autoware Foundation有60多名成员，包括非常大的知名企业，如arm，因特尔，NXP，Xilinx

686
01:20:53,160 --> 01:20:57,264
这些都是芯片制造商，ADLink是计算器制造商

687
01:20:57,240 --> 01:21:00,680
有政府部分，比如美国交通部

688
01:21:03,601 --> 01:21:09,207
有传感器制造商，例如，HESAI，Velodyne或robosense等等

689
01:21:11,410 --> 01:21:14,690
还有学术机构，如名古屋大学，东京大学，琦玉大学

690
01:21:19,890 --> 01:21:26,360
还有一些来自世界各地的学术机构

691
01:21:29,393 --> 01:21:35,700
例如Poznan University of Technology， Florida Polytechnic University，和其他大学和机构

692
01:21:36,980 --> 01:21:41,740
有60多名成员包含其中，有一些最近的成员没有在这张图里

693
01:21:46,234 --> 01:21:49,714
例如一家叫做Microtrain，是另外一家计算机制造商

694
01:21:50,785 --> 01:21:55,290
Autoware有很多的项目，比如一开始的项目叫做Autoware.AI

695
01:21:55,290 --> 01:21:59,470
我们的课程会讲到的，Autoware.AI是初代的Autoware

696
01:21:59,940 --> 01:22:03,320
是基于ROS1代开发的，它起先是用来学习这平台的

697
01:22:08,520 --> 01:22:11,480
这就是为什么这堂课里，我们要教Autoware.AI

698
01:22:11,480 --> 01:22:13,670
这样我们可以有个初步的了解

699
01:22:13,670 --> 01:22:16,280
这个项目是由一群研究人员基于研究目的开发的，因此会有一些使用上的限制

700
01:22:20,210 --> 01:22:23,420
但对于这个课程而言，它已经足够满足我们的需求

701
01:22:24,770 --> 01:22:26,920
这个项目也包含一些高级功能，很多企业至今都还在使用Autoware.AI

702
01:22:26,920 --> 01:22:31,890
来验证概念（Proof of Concepts）和搭建模型（Prototyping）

703
01:22:32,440 --> 01:22:37,445
第二个，Autoware.IO则是把Autoware当做一个插件，用在一个芯片系统或者硬件上

704
01:22:44,420 --> 01:22:49,640
Autoware的功能被安装在一些ECU或者一些不同的传感器上

705
01:22:54,340 --> 01:22:59,460
或者在一些低级驾驶用的几种CPU上面

706
01:22:59,460 --> 01:23:02,310
最后一个项目，叫做Autoware.Auto，又被改名为Autoware.core或者universe

707
01:23:05,830 --> 01:23:08,810
使用的是最先进的软件管理规格，重新实现了Autoware.AI的所有功能

708
01:23:17,340 --> 01:23:21,760
在多名工业界的成员的的监督下

709
01:23:23,300 --> 01:23:27,840
基于工业的规范标准和工程原理原则下重新编写，并且经过了严格的测试

710
01:23:40,215 --> 01:23:43,184
现在你们可以看到一些Autoware的演示视频

711
01:23:43,184 --> 01:23:50,225
第一个是Autoware在2015年12月在日本地区公路上演示的视频

712
01:23:50,225 --> 01:23:54,462
2015年12月

713
01:23:54,462 --> 01:24:00,602
加藤真平教授作为Autoware的创始人，以及整个系统的架构设计者

714
01:24:00,602 --> 01:24:08,443
他正在演示Autoware在日本公路上实际运行的样子

715
01:24:08,443 --> 01:24:17,919
你们可以看到他在测试Autoware，红色的道路没有什么特别的含义

716
01:24:17,919 --> 01:24:27,128
名古屋市区公共汽车优先的车道，跟自动驾驶汽车并没有什么特别的关系

717
01:24:29,898 --> 01:24:34,348
这个是Autoware的早期演示视频之一

718
01:24:35,670 --> 01:24:41,040
2016年，我们有更多的Autoware的实际演示，继续在测试Autoware的各项功能

719
01:24:44,079 --> 01:24:47,782
他们开始做更多的实机演示，更多的测试，也就是这一年他们成立了TierIV公司

720
01:24:50,852 --> 01:24:53,622
实际上到了这个阶段他们开始邀请更多的普通人

721
01:24:55,123 --> 01:24:59,728
非工程师的人来测试和观察这些技术的表现如何

722
01:24:58,593 --> 01:25:01,563
这样一来，（开发团队）可以了解，其他人是否能够接受这些技术

723
01:25:05,333 --> 01:25:10,071
总体来说，用户有了一些非常正面的反馈

724
01:25:10,071 --> 01:25:13,341
当它们真的坐在一辆自动驾驶车辆里，没有人操纵/触摸方向盘或刹车

725
01:25:18,160 --> 01:25:21,130
但这台车能自主移动到目的地，有些人在起初表现出了紧张

726
01:25:21,130 --> 01:25:25,550
也有一些人开始时感到有些害怕，表示有一些担心

727
01:25:43,138 --> 01:25:49,344
当人们第一次乘坐这样的交通工具，人们会觉得不安全，可能会感到害怕

728
01:25:49,344 --> 01:25:57,986
但过了一段时间，人们觉得这个技术很好，感觉很舒服

729
01:25:57,986 --> 01:26:02,524
在当时那个时期，人们还不了解这个技术

730
01:26:02,524 --> 01:26:07,996
不知道什么是Lidar，这些都不是日常生活会了解的东西

731
01:26:07,996 --> 01:26:12,934
，也不知道它是用来干什么的，但在那之后，

732
01:26:13,101 --> 01:26:18,039
人们开始了解更多关于（自动驾驶）车辆的信息

733
01:26:18,039 --> 01:26:20,875
（相关部门的人）多次在街道上进行演示

734
01:26:20,875 --> 01:26:26,614
这是2017年的另外一次自动驾驶汽车在公路上的演示

735
01:26:26,781 --> 01:26:31,686
到了这一时期，许多不同的协议已经被制定了

736
01:26:31,677 --> 01:26:38,984
获得了自动驾驶汽车能够在公路上进行测试的资格

737
01:26:38,993 --> 01:26:45,200
当这个资格被取的之后，TierIV甚至跟一家保险公司合作

738
01:26:45,200 --> 01:26:50,605
开始提供日本第一个自动驾驶相关的保险

739
01:26:52,207 --> 01:26:54,809
所以在这个视频里，你可以看到

740
01:26:54,809 --> 01:26:58,646
这辆自动驾驶汽车正在开进位于名古屋市的高速公路入口处

741
01:26:58,646 --> 01:27:08,056
位于名古屋市的高速公路入口处，高速公路入口处（日本称之为ETC）

742
01:27:09,899 --> 01:27:13,470
然后它开始在高速公路上的行驶

743
01:27:15,597 --> 01:27:29,544
2018年，TierIV又与日本邮政合作，以提供用于收集邮件，送邮件

744
01:27:29,544 --> 01:27:37,552
以及处理日本邮政包裹的自动驾驶服务

745
01:27:38,253 --> 01:27:49,330
这里可以介绍一个视频，你们可以看到Autoware在自动驾驶车辆上面的表现

746
01:27:49,597 --> 01:27:54,269
当然这个车的方向盘后面的坐着发驾驶员

747
01:27:54,269 --> 01:27:56,804
因为在日本，为了在突发的事故中能够及时进行对应

748
01:27:56,804 --> 01:27:59,040
自动驾驶车辆在公路上驾驶，驾驶员必须坐在驾驶位

749
01:28:03,144 --> 01:28:16,057
这个是另外一个项目，东京的一个项目的视频，日本出租车公司

750
01:28:16,057 --> 01:28:21,896
这个项目是为了搭建一个能够乘坐的自动驾驶系统

751
01:28:21,896 --> 01:28:27,735
在这个项目里，驾驶员不用坐在驾驶座上了

752
01:28:27,721 --> 01:28:35,162
从大约2020年开始，日本更改了自动驾驶相关的法律法规

753
01:28:35,176 --> 01:28:40,148
允许驾驶座位上没有驾驶员

754
01:28:40,148 --> 01:28:43,819
但是前提是必须有人在远程监视车辆的状态

755
01:28:43,821 --> 01:28:48,993
在这个项目里，这台自动驾驶车辆行驶时，有人在远程进行监督

756
01:28:48,990 --> 01:28:54,962
有人坐在远程控制中心，正在监视这台自动驾驶车辆是否正常

757
01:28:54,962 --> 01:28:58,265
出于这个原因Autoware取得了很大的进展，TierIV做了很多的尝试

758
01:28:59,567 --> 01:29:03,305
致力于改善传统的Autoware.AI，发展到拥有跟多先进的功能

759
01:29:04,540 --> 01:29:12,214
我们将在接下来的课程为大家进行介绍，在这次日本出租车的示范中

760
01:29:24,559 --> 01:29:38,639
甚至请到了东京市的市长，参加了这次的自动驾驶技术的体验

761
01:29:40,742 --> 01:29:47,482
为了确保这次的技术演示的安全，这辆车安装了多台传感器

762
01:29:47,482 --> 01:29:53,388
甚至有很多冗余的设置，有一个人一直在远程监控这台车辆

763
01:29:53,388 --> 01:30:00,638
这是通过4G和5G的通信技术达到的，以此来保证自动驾驶系统的安全性

764
01:30:24,685 --> 01:30:36,464
也许你们也听说过， 2021年日本东京举办了奥运会

765
01:30:36,820 --> 01:30:47,330
所以他们制作了这台自动驾驶的巴士

766
01:30:47,341 --> 01:30:55,416
这台用来接送运动员的巴士，用了丰田制造的E-pallete的车体

767
01:30:55,416 --> 01:31:10,665
这台车正是使用了Autoware系统环绕运行，在比赛场地和选手村之间多次运行

768
01:31:10,665 --> 01:31:21,542
你们可以看到视频中多台巴士，这台巴士车内车外都安装了所需的多台传感器

769
01:31:21,542 --> 01:31:27,982
这台巴士非常小心，会预测行人是否会穿过马路

770
01:31:28,716 --> 01:31:38,125
而且这台车在奥运会的数个月期间，搭乘了多名运动员

771
01:31:43,931 --> 01:31:50,371
Autoware作为一个具备自动驾驶所需的所有功能的工具

772
01:31:50,371 --> 01:31:53,074
也包含自我定位的功能，这个功能使用了Lidar(激光雷达)

773
01:31:53,074 --> 01:31:57,745
所以你可以在这里看到Lidar的PointCloud(点云)，正在寻找它在世界上的位置

774
01:31:57,745 --> 01:32:05,286
在一个高清地图（High-Definition Maps，又被叫做HD Maps）里，道路的元素被编码（encode）了

775
01:32:05,286 --> 01:32:13,895
这里蓝色的线，代表的是这台车应该行驶的车道的中央，人行横道也被标记了出来

776
01:32:13,895 --> 01:32:20,434
红绿灯也被高亮标示了出来，哪里应该有个红绿灯

777
01:32:20,434 --> 01:32:25,506
路口在哪里，车道的边界线在哪里等等信息

778
01:32:25,506 --> 01:32:31,586
这些元素会大大简化路径规划的运算难度

779
01:32:31,579 --> 01:32:37,818
所以HD Maps，是另一种的传感器，能为我们带来更过的环境的语义信息

780
01:32:40,153 --> 01:32:45,926
另外，多种路径规划算法和车辆控制等功能

781
01:32:45,927 --> 01:32:57,705
包括使用相机和激光雷达的几种最先进的感知算法，控制方法等等

782
01:33:00,975 --> 01:33:06,847
当然，Autoware也可以执行支线任务，比如在之前的日本出租车的视频里看到的

783
01:33:06,847 --> 01:33:17,724
系统可能从远程控制中心，去控制一台自动驾驶车辆

784
01:33:17,725 --> 01:33:23,698
你可以看到，这里有一个人正在监视自动驾驶车辆

785
01:33:23,698 --> 01:33:27,828
他正在观看从车载相机里通过WI-FI传过来的信息

786
01:33:27,835 --> 01:33:33,040
并且可以远程控制自动驾驶系统的方向盘和加减速

787
01:33:37,445 --> 01:33:50,191
因为这是拥有很多功能的平台，也有很多与Autoware相关的功能也正在出现

788
01:33:50,178 --> 01:33:53,781
比如车队管理系统 (Fleet Management System)

789
01:33:53,793 --> 01:33:59,933
所以你可以控制车辆，查看车辆所在的位置，检测车辆的状态

790
01:33:59,934 --> 01:34:05,214
如果某些车辆发生了问题，可以接管并检查发生了什么问题

791
01:34:05,206 --> 01:34:12,747
另外还有用来训练，评测，生成数据的工具如，地图，数据库

792
01:34:12,747 --> 01:34:17,018
或者还有开源的，如人机交互界面

793
01:34:17,018 --> 01:34:23,357
或者一些可以取代Autoware部分功能的开源代码

794
01:34:23,768 --> 01:34:29,307
还有其他种类的车辆类型，传感器，和配置等

795
01:34:29,864 --> 01:34:40,174
TierIV作为一个主要致力于开发Autoware的公司，也创造了庞大的业务

796
01:34:40,174 --> 01:34:53,988
这些业务主要是基于多个现有的ODDs

797
01:34:53,988 --> 01:35:00,394
ODD就是我们之前提到的运行设计域(Operational Design Domains)

798
01:35:00,394 --> 01:35:10,004
用来定义和制约系统，保证其正常且安全运行的规则域

799
01:35:10,011 --> 01:35:16,384
如果系统有一些条件不在ODD的范围内，那么系统可能不再安全，且车辆应该停止工作

800
01:35:16,387 --> 01:35:28,399
比如系统的ODD定义只能在天气晴朗是没问题的，或者轻微多云的气候环境下运行

801
01:35:28,389 --> 01:35:33,094
实际上大多数公司也都会这样做的

802
01:35:33,094 --> 01:35:41,936
但如果今天在下雨，那么你不应该把自动驾驶汽车开出去，就是这个意思

803
01:35:41,936 --> 01:35:52,413
如果ODD定义为不下雨的天气条件的话，这是违反ODD的规则的

804
01:35:52,739 --> 01:35:59,713
你可以把ODD理解为你的车外有一个定义了规则的盒子

805
01:36:04,525 --> 01:36:08,662
TierIV定义了许多种类的的ODDs，比如

806
01:36:08,662 --> 01:36:13,734
ODD1是一种自动驾驶专用的环境，比如私人道路

807
01:36:13,734 --> 01:36:18,139
ODD2是一种工厂内部的运输道路，也是私人道路

808
01:36:18,139 --> 01:36:22,810
ODD3是城市道路，则是公开道路，ODD3是郊区道路/城市道路，则是公开道路

809
01:36:22,810 --> 01:36:30,718
基于这三种不同的ODD条件，创建了多种类型的项目

810
01:36:35,156 --> 01:36:42,863
有一个项目叫做Pilot Auto X1是用于运输货物的

811
01:36:42,863 --> 01:36:47,568
Pilot Auto X2则是机器人巴士公交车/机器人摆渡车

812
01:36:47,568 --> 01:36:53,140
可以看出主要是限制在ODD2里，和一点点ODD3，也就是郊区道路

813
01:36:53,140 --> 01:36:59,413
送货机器人属于Pilot Auto S1，包含ODD1里专用道路的情况

814
01:36:59,413 --> 01:37:06,654
ODD2里的工厂运输道路，和一点点的ODD3里的一点点郊区道路

815
01:37:06,654 --> 01:37:13,594
最后还有Pilot Auto XX1是自动驾驶出租车，而Pilot Auto XX2消费者用的自动驾驶汽车

816
01:37:18,499 --> 01:37:25,105
那么最后我们总结一下，ODD1通常被定义为低速

817
01:37:25,105 --> 01:37:30,277
短程的条件，通常在有较多限制的设施里面

818
01:37:30,277 --> 01:37:39,186
ODD2则定义为物流和公司内部的运输或校园内移动

819
01:37:39,186 --> 01:37:48,028
ODD3则定义在郊区的小路，公园的某些区域的路线，山区的一些路线

820
01:37:48,028 --> 01:37:53,534
如果再进一步的话，可以是市区，比如一个大城市里的道路

821
01:37:55,236 --> 01:38:05,145
根据每个ODD，不同的车辆可以根据不同的ODD来定义在不同的情况下做不同的事情

822
01:38:05,145 --> 01:38:12,887
例如，一个货物运输的车辆，它需要有一个安全和覆盖率高的车辆周围设置

823
01:38:13,554 --> 01:38:18,726
因此，它得有个激光雷达在这里，传感器覆盖更多的侧面和前侧的区域

824
01:38:18,726 --> 01:38:23,898
所以它需要3个激光雷达，也许后面也需要传感器

825
01:38:23,898 --> 01:38:30,938
ODD也明确定义了闭区域（Closed area）使用用途是运输货物

826
01:38:30,938 --> 01:38:36,877
还定义了约束条件，例如，速度的最大值和最小值

827
01:38:36,977 --> 01:38:45,485
什么样的物体，需要被识别，还有检测的距离区间等等

828
01:38:45,486 --> 01:38:53,094
支持的天气条件包括白天/夜晚/晴天/雨天，而不支持的包括雪天/烟雾/水蒸气

829
01:38:56,297 --> 01:39:02,036
对于ODD而言，越是高阶的ODD遇到危险的可能性越大

830
01:39:02,036 --> 01:39:08,208
需要更多的传感器，传感器也越需要配置

831
01:39:08,208 --> 01:39:12,646
比如机器人公交巴士，需要如此多的传感器

832
01:39:12,630 --> 01:39:17,768
你可以看到这里有HESAI Pandar 40P, QT

833
01:39:17,785 --> 01:39:22,623
一些相机，一些地理位置（GNSS）接收器，一些GMU

834
01:39:22,690 --> 01:39:27,962
在这类型的车上，在定义目标等参数的时候

835
01:39:27,962 --> 01:39:31,733
例如，操作的速度被定义在要低于20km/h

836
01:39:31,732 --> 01:39:40,708
被检测到的物体有这些，物体识别的距离，红绿灯的信息，虽然这里没有写

837
01:39:40,708 --> 01:39:49,398
还有一些规定，比如不准超车区段(No passing zone)则代表不准超车等等

838
01:39:51,418 --> 01:40:00,661
有一些项目，例如，搬运货物项目，是由TierIV和雅马哈motor通过协作完成的

839
01:40:00,661 --> 01:40:07,868
这个合作项目的名称叫做eve autonomy，是给工厂内部的这种车辆提供操作服务

840
01:40:07,851 --> 01:40:15,626
基本上这些车都是Golf车，传感器经过特殊调试，导入了Autoware系统

841
01:40:15,626 --> 01:40:19,864
是专门用来搬运货物的

842
01:40:20,280 --> 01:40:26,687
X2项目是关于，之前介绍过的，为运动员搭乘用的丰田的e-Palette

843
01:40:26,701 --> 01:40:31,940
这是一辆小型机器人公交巴士，用来交通和运送货物，是TierIV和丰田一起开发的

844
01:40:33,660 --> 01:40:43,170
X2项目还包括机器人公交巴士，是由TierIV和其他车企一起开发的

845
01:40:45,965 --> 01:40:56,208
还有，创建一个小型研究平台，甚至能满足小型商业用途，叫做Logiee

846
01:40:56,917 --> 01:41:02,423
这个项目就是之前演示过的，机器人出租车

847
01:41:02,423 --> 01:41:06,560
是由TierIV和日本出租车公司一起开发的

848
01:41:07,289 --> 01:41:19,101
TierIV目前与其他的公司一起打造消费者用自动驾驶汽车

849
01:41:19,907 --> 01:41:25,646
与富士康合作，这个项目叫做MIH项目

850
01:41:25,648 --> 01:41:33,356
在这MIH项目，富士康的目的是打造一款像iPhone一样

851
01:41:33,369 --> 01:41:39,709
大部分都可以买得起的低价格的一款电动汽车

852
01:41:39,693 --> 01:41:49,904
系统则导入了Autoware，这就是他们的想法，这就是Pilot Auto XX2

853
01:41:52,272 --> 01:41:59,546
Autoware, TierIV, 以及Autoware Foundation，与世界各地进行了很多合作

854
01:41:59,880 --> 01:42:06,010
在2016年，TierIV, Udacity美国把Autoware部署到一台真正的汽车上

855
01:42:06,006 --> 01:42:14,548
在美国，他们开了不算很远，大约开了31英里

856
01:42:14,561 --> 01:42:21,401
但这次是在公路上驾驶的，很多条件都和日本不同

857
01:42:22,336 --> 01:42:31,912
由来自世界各地的不同的合作伙伴带来了实际演示

858
01:42:31,912 --> 01:42:41,388
他们都在使用Autoware，不同的城市，比如硅谷，Estonia

859
01:42:41,376 --> 01:42:48,750
还有我自己也参与的，跟兰州大学合作的项目

860
01:42:48,772 --> 01:42:58,448
周庆国教授负责的这个小组，在那里，他们也在研究自动驾驶

861
01:42:58,438 --> 01:43:06,013
也 在使用Autoware，他们在探索5G的通信技术，远程驾驶

862
01:43:06,013 --> 01:43:12,553
他们完成了地图生成，还改进了自我定位等等功能

863
01:43:12,557 --> 01:43:20,499
还有就是我之前介绍过的，有人试图将Autoware用到一级方程式比赛F1赛车上

864
01:43:24,131 --> 01:43:31,338
我们自己所处的名古屋大学的自动驾驶研究小组

865
01:43:31,348 --> 01:43:42,392
也一直在努力改进Autoware，通过引进新的技术，例如点云压缩技术

866
01:43:42,382 --> 01:43:55,829
3D地图生成的新技术，自我定位功能，多种物体检测和躲避障碍物的方法

867
01:43:55,818 --> 01:44:03,726
多种模拟场景的实验，能见度的预测，还包括端到端（E2E）深度学习的研究课题

868
01:44:03,740 --> 01:44:10,714
这个方法主要就是从原始数据，通过一个深层网络，生成一个传感器控制信号

869
01:44:10,718 --> 01:44:16,190
我们打算大规模的实验这种方法，不仅在实际的车辆上，也在小型机器上面

870
01:44:21,622 --> 01:44:29,696
到这里我们主要介绍了Autoware，主要讨论了开源的项目

871
01:44:29,696 --> 01:44:37,904
apollo也是一个开源的自动驾驶平台，是在2017年问世的

872
01:44:37,913 --> 01:44:46,755
apollo已经开始每年都在增长，发布了许多版本

873
01:44:46,747 --> 01:44:56,256
版本6是最新的，将提供一个完全无人驾驶的平台

874
01:44:57,758 --> 01:45:08,201
apollo这个项目是由百度开发的，现在仍受到百度的支持

875
01:45:08,202 --> 01:45:13,341
已经开始延伸到其他的一些企业里

876
01:45:13,335 --> 01:45:19,642
它跟Autoware略有不同，Autoware有一个非常大的开发人员的社区

877
01:45:19,656 --> 01:45:26,062
但这些开发人员不属于同一个组织，他们工作环境非常开放

878
01:45:26,046 --> 01:45:39,026
apollo是由百度的内部员工一起开发的，这样的话，百度可以更好的控制开发

879
01:45:39,025 --> 01:45:44,197
这是很不错的事情，他们做了做了很多很好的尝试

880
01:45:44,204 --> 01:45:52,279
例如，因为ROS1代不能处理实施信息等问题，放弃了ROS

881
01:45:52,279 --> 01:45:55,449
然后创建一个自己的系统，就做apollo Kernel

882
01:45:55,449 --> 01:46:05,992
这也是一个创新，但这也意味着，你想把自己的代码迁移到apollo上

883
01:46:05,992 --> 01:46:13,934
你需要完全舍弃掉关于ROS的开发，需要从零开始学习apollo

884
01:46:13,934 --> 01:46:17,304
它们为某些传感器提供驱动程序

885
01:46:17,304 --> 01:46:22,042
也具有地图生成自我定位，物体检测，轨迹跟踪，校准等功能

886
01:46:22,042 --> 01:46:26,980
他们不直接提供有些工具，如生成地图等

887
01:46:26,980 --> 01:46:30,150
但是你可以向他们发送你的传感器数据

888
01:46:30,150 --> 01:46:34,721
他们把校准后的数据或地图信息返送给你

889
01:46:34,721 --> 01:46:37,391
这就是他们提供服务的方式，也是一种商业模式

890
01:46:37,391 --> 01:46:40,861
跟Autoware相比，两者之间有些区别

891
01:46:41,728 --> 01:46:47,134
apollo5.0包含许多元素

892
01:46:47,134 --> 01:46:58,278
比如，机器人出租车，代客停车，CarOS，云服务，比如，在云端的高清地图

893
01:46:58,278 --> 01:47:10,924
以及数据库的安全，还有 V2X通信，也就是说外部环境的传感器或者信号数据

894
01:47:12,935 --> 01:47:19,608
可以在汽车端（利用V2X）进行读取，然后这些数据会被融合到感知模块里

895
01:47:19,599 --> 01:47:28,942
而开源平台包含以下这些（模块），Map Engine, 自我定位，感知，预测等等

896
01:47:28,941 --> 01:47:36,482
这些由Cyber RT和实时操作系统，如Ubuntu支持

897
01:47:36,482 --> 01:47:44,257
支持多种不同的硬件，包含不同的计算机，IMU，相机，激光雷达，等等

898
01:47:48,995 --> 01:48:00,707
apollo 6.0则更加进化了，包括对感知，预测，路径规划，车辆控制功能的支持和强化

899
01:48:00,707 --> 01:48:06,727
还增加了对多种的硬件的支持

900
01:48:10,750 --> 01:48:15,422
系统的基本配置被解释的很清楚，你可以在相关文档中找到

901
01:48:15,422 --> 01:48:19,359
你可以使用哪种激光雷达，激光雷达应该放在哪个位置

902
01:48:19,359 --> 01:48:21,539
其他东西的位置，可以用什么样的电脑等等

903
01:48:21,528 --> 01:48:25,532
所以部署这样的系统会相对简单

904
01:48:25,532 --> 01:48:30,372
在实现的某个阶段，只能使用特定的传感器，特定的电脑，特定的类型GNSS

905
01:48:30,363 --> 01:48:37,203
导致使用上略有限制，但随着时间的推移，现在情况发生了变化

906
01:48:37,200 --> 01:48:40,236
现在已经支持多种类型的传感器和计算机

907
01:48:42,249 --> 01:48:48,922
那么我们看一下一个apollo首选配置的例子

908
01:48:48,925 --> 01:48:54,430
我想这是apollo3.5的例子，那时这里面就有多种模块

909
01:48:55,695 --> 01:49:02,135
在这里是一个他们的Web-interface（apollo的可视化工具）的演示

910
01:49:02,143 --> 01:49:06,614
你可以非常直观的看到可视化的结果

911
01:49:06,591 --> 01:49:12,964
而且你还可以控制，这些激活的apollo的性能参数，这使得事情变得比较简单

912
01:49:12,979 --> 01:49:19,689
在Autoware里，并没有这样的漂亮的可视化界面

913
01:49:19,686 --> 01:49:23,623
我们实际上使用了 ROS里已有的工具

914
01:49:23,636 --> 01:49:29,275
Rviz，也就是Rviz2，这不是一个糟糕的决定

915
01:49:29,268 --> 01:49:36,475
因为Autoware现在致力于尽量使用社区里已有的（模块，工具等）

916
01:49:41,074 --> 01:49:43,843
在这课程，我不会说哪一个更好

917
01:49:43,843 --> 01:49:48,782
这节课我将介绍Autoware，所以我的看法带有一些偏差

918
01:49:48,782 --> 01:49:59,926
但是作为一种对比，Autoware倾向于发布，更接近纯粹的标准的开源项目业务

919
01:50:00,093 --> 01:50:02,683
如同ROS在做的事情

920
01:50:02,696 --> 01:50:09,202
这意味着想拓展到使用Autoware的话会简单，会灵活

921
01:50:09,202 --> 01:50:17,143
因为如果你知道怎么用ROS，和怎么用开源的东西，那么就可以开始着手使用Autoware了

922
01:50:17,151 --> 01:50:23,491
开源的open意味着打开，让更多的人在一起工作

923
01:50:23,483 --> 01:50:28,188
也就使得有更多的机会获得，对更多（种）的硬件支持，以及会在更多的地方使用

924
01:50:28,188 --> 01:50:35,095
但是，Autoware在某些方面还不够好，比如没有Web-interface这样的图形界面

925
01:50:35,095 --> 01:50:41,868
而且在很多事情上都不是很好，Autoware.AI的开发之初并不是用于验证的

926
01:50:41,868 --> 01:50:56,483
而apollo里的实现也许更加稳定，在使用apollo的某个阶段，需要使用特定的硬件

927
01:50:56,483 --> 01:51:03,256
与Autoware相比，这是一种限制，而且因为你必须使用这个CyperRT等

928
01:51:03,256 --> 01:51:09,562
那么想要适应这个系统需要更多的时间，但apollo有更完整和扎实的功能实现

929
01:51:16,503 --> 01:51:21,908
在过去，我们曾经尝试做这样的一件事情

930
01:51:21,908 --> 01:51:26,613
当然，Autoware的开发离不开工业界的使用，和商业上的扩展

931
01:51:26,629 --> 01:51:34,137
但在另一方面，我们一直企图教育人们什么是自动驾驶

932
01:51:34,113 --> 01:51:40,986
以及希望教大家，作为实现自动驾驶的平台要如何使用Autoware

933
01:51:41,008 --> 01:51:47,982
所以我们在日本展开了一些服务，在日本开办了一个叫做Autoware Academy的地方

934
01:51:47,969 --> 01:51:55,610
所以人们可以去那里，学习什么是自动驾驶

935
01:51:55,622 --> 01:52:01,328
利用的（当然是）Autoware，以及怎样在实车上实现

936
01:52:01,314 --> 01:52:07,887
在中国，我们和PIX训练营一起，我们把学生带到基地

937
01:52:07,883 --> 01:52:15,891
一开始学生就可以使用真实的汽车来学习Autoware，和实现自动驾驶

938
01:52:15,895 --> 01:52:22,135
我们也举办了一些其他的活动

939
01:52:22,135 --> 01:52:27,475
那么，日本的Autoware Academy，是从2016年开始运营的

940
01:52:27,490 --> 01:52:33,580
在这次新冠的危机中不得不暂停了

941
01:52:33,580 --> 01:52:40,440
这个活动会持续4到5天，最后一天会作为动手活动的一天

942
01:52:45,536 --> 01:52:49,540
这个课程会涉及到自动驾驶的各个方面

943
01:52:49,540 --> 01:52:54,978
这是一个由TierIV设计的关于Autoware的教育课程

944
01:52:58,370 --> 01:53:02,580
现在已经发展到由另一家公司在提供在线课程

945
01:53:05,620 --> 01:53:12,860
但这个学院早期阶段，学员们会去一个叫做安全学习中心的地方

946
01:53:21,070 --> 01:53:26,170
位于日本的丰田市，这个中心人工模拟了一个城市

947
01:53:26,170 --> 01:53:29,840
具有日本普通道路的所有元素

948
01:53:30,550 --> 01:53:34,160
在这里有一家公司会专门对自动驾驶进行评估

949
01:53:44,710 --> 01:53:47,950
前一段时间，在中国，当然是在新冠发生之前，我们曾经运营了一个培训基地

950
01:53:48,550 --> 01:53:54,480
这个培训基地是由PIX，优达学城，和TierIV三家公司一起合作运营的

951
01:53:56,060 --> 01:54:00,530
这是个5天的，全程需要动手参加的活动

952
01:54:03,730 --> 01:54:06,540
从一开始到最后一天，学生都可以使用汽车

953
01:54:08,020 --> 01:54:10,960
然后你可以使用Autoware，并且可以让这辆车跑起来，这就是训练基地的介绍了

954
01:54:16,250 --> 01:54:18,910
实际上，现在这个训练课程的内容，也是参考了训练基地培训内容定义的

955
01:54:31,130 --> 01:54:36,390
所以，现在这个课程也包括怎样操作使用Autoware

956
01:54:36,402 --> 01:54:39,706
并涵盖了如何实现自动驾驶的所有方面

957
01:54:39,706 --> 01:54:45,745
我们（TierIV）提供Autoware，和培训相关内容

958
01:54:45,745 --> 01:54:49,015
Udacity提供学生

959
01:54:49,015 --> 01:54:53,086
PIX Moving提供设施和移动的这些设备

960
01:54:53,086 --> 01:54:58,146
我要给大家看一些中文的视频

961
01:54:57,790 --> 01:55:03,762
听一下参加者的感想

962
01:56:56,342 --> 01:57:01,714
好的，也许到了第二个阶段

963
01:57:01,714 --> 01:57:07,186
你们也要参加培训内容和一些需要动手的活动

964
01:57:07,186 --> 01:57:10,957
这个训练基地有类似的组成

965
01:57:10,957 --> 01:57:17,130
有一个理论部分，由我来讲解怎样使用Autoware

966
01:57:17,130 --> 01:57:24,370
然后有一个实用部分，学生们真的上车，动手去测试

967
01:57:24,370 --> 01:57:28,640
这也是我们这个课程也想达到的效果

968
01:57:28,641 --> 01:57:31,878
然后这是一次很棒的经历

969
01:57:31,878 --> 01:57:35,868
这里我们想大家尽量去结合这两个组成部分

970
01:57:35,882 --> 01:57:41,187
一个是技术的理论背景，还有一个是实用的部分

971
01:57:41,187 --> 01:57:46,259
然后把两个结合在一起，在真实的车上动手实现

972
01:57:46,259 --> 01:57:49,162
所以，这就是我们想要看到的

973
01:57:49,162 --> 01:57:52,799
这是一个非常有趣的训练基地。学员们对结果很满足。

974
01:57:52,799 --> 01:57:57,136
把自己的成果带回自己所在的企业

975
01:57:57,136 --> 01:58:03,242
这会为他们所在的企业，也带来巨大的价值

976
01:58:05,144 --> 01:58:11,484
在其他国家也看到了类似的事情，比如泰国

977
01:58:11,484 --> 01:58:15,955
我们组织了研讨会讨论Autoware的知识

978
01:58:15,955 --> 01:58:19,892
然后参加人员安装并运行了Autoware

979
01:58:19,892 --> 01:58:23,822
只需要Autoware和这台丰田小型汽车，我们就可以实现这个过程

980
01:58:23,830 --> 01:58:29,940
在新加坡南洋理工大学，在爱沙尼亚的Tallinn University

981
01:58:30,336 --> 01:58:37,477
我们举办了座谈会，在我自己的国家，在我的度假期间

982
01:58:37,477 --> 01:58:43,249
最后也举办了关于Autoware的简单的座谈会

983
01:58:43,783 --> 01:58:49,288
还有，美国交通部，他们的CARMA项目里，正在使用Autoware

984
01:58:49,288 --> 01:58:52,458
CARMA是一个自动驾驶平台

985
01:58:52,458 --> 01:58:57,630
而且他是完全基于Autoware的平台，Autoware Online

986
01:58:57,630 --> 01:59:01,033
这次的课程我们不需要用到它

987
01:59:01,033 --> 01:59:06,873
Autoware Online是用来，即使你没有电脑也没有一台车的时候

988
01:59:06,873 --> 01:59:13,646
我们提供在Amazon Web Service (AWS) 云端的一个服务

989
01:59:13,646 --> 01:59:17,617
然后你就可以云端运行Autoware了

990
01:59:17,617 --> 01:59:22,488
当然，这是如果你没有电脑也没有车，你可以测试Autoware

991
01:59:22,488 --> 01:59:26,159
这是我们之前做过的的另一个训练活动

992
01:59:26,159 --> 01:59:33,299
我们希望你们随身携带电脑自己安装Autoware和所需的一切

993
01:59:33,299 --> 01:59:36,869
带上那些电脑进车里，在车内并测试你所学的东西

994
01:59:38,804 --> 01:59:44,110
迄今为止，我们已经举办了许多与研究团体，学会，工业相关的活动

995
01:59:44,110 --> 01:59:50,483
通过不同的工作坊，例如，DSP，APSIPA

996
01:59:50,483 --> 01:59:55,054
在拉斯维加斯和巴黎和名古屋举行的国际会议上的研讨会

997
01:59:55,054 --> 02:00:05,298
上个月在德国亚琛IV2022我们也举办了workshop介绍了Autoware

998
02:00:05,298 --> 02:00:11,971
在2019年在中国兰州举办了Autoware workshop

999
02:00:14,273 --> 02:00:16,983
现在我们又回到中国了

1000
02:00:16,976 --> 02:00:27,987
这次是由中国汽车技术研究中心（CATARC）组织举办这次精彩的活动

1001
02:00:27,987 --> 02:00:33,626
这次课程主要是介绍自动驾驶

1002
02:00:33,626 --> 02:00:41,834
我们非常被荣幸的是，Autoware被选作了这次培训的自动驾驶平台

1003
02:00:42,168 --> 02:00:47,807
这次的培训会在CATARC(中国汽车技术研究中心)举办

1004
02:00:47,807 --> 02:00:53,746
本次活动由三家公司一起合作举办

1005
02:00:53,746 --> 02:00:58,017
为大家提供这个Autoware的训练课程

1006
02:00:58,017 --> 02:01:01,153
三家分别是CATARC，TierIV和PIX moving

1007
02:01:01,754 --> 02:01:09,295
CATARC将提供的他们的设施，非常优秀的，有才能的工程师团队

1008
02:01:09,729 --> 02:01:16,636
以及位于天津的，非常卓越的研究设施

1009
02:01:17,003 --> 02:01:22,341
他们将提供一切相关的资源，努力为大家提供一个很棒的体验

1010
02:01:22,775 --> 02:01:27,246
不仅包括需要动手的实践课程

1011
02:01:27,246 --> 02:01:33,119
也会提供参加本次在线课程所需的所有资源

1012
02:01:33,753 --> 02:01:40,426
TierIV和Autoware Foundation将给大家来提供Autoware

1013
02:01:40,426 --> 02:01:46,732
而PIX moving给大家提供，本次课程中动手操作和使用到的车辆

1014
02:01:49,468 --> 02:01:55,541
那么让我们来总结一下，迄今为止

1015
02:01:55,541 --> 02:02:01,981
在社区里已经展开了很多关于自动驾驶的工作

1016
02:02:01,981 --> 02:02:06,852
真正的等级5的无人车已经快要实现了

1017
02:02:07,353 --> 02:02:13,626
实现这些还需要一些时间，因为驾驶行为是高难度的问题

1018
02:02:14,126 --> 02:02:23,502
我们需要深度的理解驾驶行为的各个方面，而且我们需要理解人类是怎样驾驶的

1019
02:02:23,502 --> 02:02:27,640
我们甚至要理解驾驶条件的心理机制的各个方面

1020
02:02:27,640 --> 02:02:31,610
来补偿当自动驾驶车辆融入社会时会引起的一些变化

1021
02:02:32,011 --> 02:02:35,681
当自动驾驶车辆行驶的时候，别的车可能还是人类在驾驶的

1022
02:02:36,682 --> 02:02:44,090
为了加速实现自动驾驶的这个过程，我们提出了开源的解决方式

1023
02:02:44,657 --> 02:02:54,667
这会使得社区进步，协同工作促使应用的普及加速

1024
02:02:54,667 --> 02:02:58,337
而更多的研究成果引入了先进技术

1025
02:02:58,337 --> 02:03:05,378
不同的自动驾驶方案平台，有不同的开源策略，比如Autoware和apollo

1026
02:03:05,378 --> 02:03:17,123
各有其长处和短处，可以根据硬件设施和你们制定的目标来进行选择

1027
02:03:17,456 --> 02:03:22,995
在这个领域，开放了许多机会，不仅是用来载人的车辆

1028
02:03:22,995 --> 02:03:27,666
物流，矿业，农业，以及机器人产业等多方面的领域

1029
02:03:28,234 --> 02:03:36,575
都可以从自动驾驶的软件里获益。所以，利用这个训练基地里所学的知识

1030
02:03:36,575 --> 02:03:43,015
去打造你们自己的商业，或者为你们的公司提供价值

1031
02:03:43,015 --> 02:03:48,654
也会给社会带来更多的发展。

1032
02:03:51,357 --> 02:03:58,163
在这个课程里我们会列出几个问题供你们思考,只是为了帮助你们自己学习

1033
02:03:58,164 --> 02:04:05,004
你们不需要回答我或者提交答案

1034
02:04:07,940 --> 02:04:14,480
请你们自己思考一下这些问题

1035
02:04:14,480 --> 02:04:18,717
并且去复习一下之前的资料，你们不需要回答给我

1036
02:04:19,051 --> 02:04:26,625
只是你们自己能够阐述这个问题就可以

1037
02:04:26,625 --> 02:04:34,033
第一个，在幻灯片第20页，我们提到了“在等级4，重新定义了ODD的范围”

1038
02:04:34,166 --> 02:04:37,686
我在课程中若干次提到了ODD

1039
02:04:37,670 --> 02:04:40,906
请问什么是ODD，以及列举几个ODD的具体例子

1040
02:04:42,141 --> 02:04:48,001
第二个问题，我们提到了Autoware和apollo的区别

1041
02:04:48,013 --> 02:04:53,185
以及为什么Autoware决定继续保留ROS，请解释两个平台的不同

1042
02:04:53,185 --> 02:05:00,960
并解释为什么Autoware还依赖ROS

1043
02:05:02,328 --> 02:05:07,399
第三个问题，请简要的介绍一下，为什么Autoware使用3D的激光雷达

1044
02:05:07,399 --> 02:05:10,269
以及为什么Autoware强烈了依赖3D的激光雷达

1045
02:05:10,269 --> 02:05:12,339
好的，以上就是我们准备的一些问题，你们可以去复习一下之前的资料

1046
02:05:14,072 --> 02:05:22,381
如果你们想不起正确的答案，请回去看一下之前的视频课程

1047
02:05:22,381 --> 02:05:25,531
看一下我们介绍的相应的地方

1048
02:05:27,219 --> 02:05:31,059
这就是这次课程的全部内容

1049
02:05:31,056 --> 02:05:34,326
首先，介绍了什么是自动驾驶

1050
02:05:36,762 --> 02:05:40,699
正如我们之前提到的，Day0 有两个部分，所以接下来我们要学习

1051
02:05:41,500 --> 02:05:44,703
传感器（sensor）的部分。

1052
02:05:45,137 --> 02:05:49,808
在Day1我们会正式开始学习Autoware

1053
02:05:50,409 --> 02:06:00,629
然后我们会开始学习安装Autoware，进行一些初步的操作。

1054
02:06:02,454 --> 02:06:07,826
然后在Day2，我们开始理解怎样生成地图

1055
02:06:07,826 --> 02:06:13,399
3D地图， HD地图（高清地图），以及自我定位的概念

1056
02:06:14,633 --> 02:06:19,338
Day3，我们开始介绍物体识别

1057
02:06:19,672 --> 02:06:24,510
还有一些关于传感器的讨论，物体识别几种不同的算法

1058
02:06:24,910 --> 02:06:29,882
以及在Autoware里是怎样实现的，还有轨迹追踪的基本概念

1059
02:06:30,282 --> 02:06:34,072
轨迹追踪的基本算法，和在Autoware里怎样实现的

1060
02:06:34,653 --> 02:06:39,992
Day4，我们会学习路径生成，路径规划，车辆控制

1061
02:06:40,626 --> 02:06:47,099
然后最后一天的Day5，我们会讲解，自动驾驶中的决策

1062
02:06:47,299 --> 02:06:51,903
驾驶模拟器，以及Autoware的未来

1063
02:06:51,904 --> 02:06:56,508
非常感谢大家，请享受这个培训系列课程

